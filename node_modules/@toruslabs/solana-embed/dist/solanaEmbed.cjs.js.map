{"version":3,"sources":["webpack://SolanaEmbed/webpack/bootstrap","webpack://SolanaEmbed/external \"@babel/runtime/helpers/defineProperty\"","webpack://SolanaEmbed/external \"@toruslabs/base-controllers\"","webpack://SolanaEmbed/external \"@toruslabs/openlogin-jrpc\"","webpack://SolanaEmbed/external \"eth-rpc-errors\"","webpack://SolanaEmbed/external \"@solana/web3.js\"","webpack://SolanaEmbed/external \"pump\"","webpack://SolanaEmbed/external \"@toruslabs/http-helpers\"","webpack://SolanaEmbed/external \"is-stream\"","webpack://SolanaEmbed/external \"loglevel\"","webpack://SolanaEmbed/external \"fast-deep-equal\"","webpack://SolanaEmbed/./src/messages.ts","webpack://SolanaEmbed/./src/interfaces.ts","webpack://SolanaEmbed/./src/config.ts","webpack://SolanaEmbed/./src/loglevel.ts","webpack://SolanaEmbed/./src/utils.ts","webpack://SolanaEmbed/./src/baseProvider.ts","webpack://SolanaEmbed/./src/embedUtils.ts","webpack://SolanaEmbed/./src/PopupHandler.ts","webpack://SolanaEmbed/./src/communicationProvider.ts","webpack://SolanaEmbed/./src/inPageProvider.ts","webpack://SolanaEmbed/./src/siteMetadata.ts","webpack://SolanaEmbed/./src/embed.ts","webpack://SolanaEmbed/./src/index.ts"],"names":["errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","data","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","config","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","getNetworkConfig","label","blockExplorerUrl","displayName","logo","rpcTarget","ticker","tickerName","BaseProvider","SafeEventEmitter","constructor","connectionStream","jsonRpcStreamName","isDuplexStream","Error","messages","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","createLoggerMiddleware","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","getRpcPromiseCallback","send","payload","callback","streamName","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","close","redirect","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","configuration","embedTranslations","windowRefs","on","isConnected","notificationHandler","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","COMMUNICATION_JRPC_METHODS","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","PROVIDER_JRPC_METHODS","isInternal","err","result","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","init","enableLogging","network","useLocalStorage","apiKey","extraParams","setAPIKey","setDefaultLevel","enableAll","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","torus","login","loginProvider","provider","login_hint","loginWithPrivateKey","loginParams","privateKey","userInfo","success","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","getAccounts","response","sendTransaction","transaction","serialize","requireAllSignatures","signTransaction","serializeMessage","messageOnly","parsed","JSON","parse","signature","publicKey","PublicKey","Buffer","addSignature","signAllTransactions","transactions","encodedMessage","map","tx","responses","signatures","item","idx","signMessage","getGaslessPublicKey","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","BasePostMessageStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all"],"mappings":"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","file":"solanaEmbed.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@toruslabs/base-controllers\");","module.exports = require(\"@toruslabs/openlogin-jrpc\");","module.exports = require(\"eth-rpc-errors\");","module.exports = require(\"@solana/web3.js\");","module.exports = require(\"pump\");","module.exports = require(\"@toruslabs/http-helpers\");","module.exports = require(\"is-stream\");","module.exports = require(\"loglevel\");","module.exports = require(\"fast-deep-equal\");","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type TORUS_BUILD_ENV_TYPE = typeof TORUS_BUILD_ENV[keyof typeof TORUS_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = typeof BUTTON_POSITION[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\n\nexport interface TorusCtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface NetworkInterface {\n  /**\n   * Block explorer url for the chain\n   * @example https://explorer.solana.com/\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Solana'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example SOL\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://api.devnet.solana.com/\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 0x2 for testnet, 0x3 for devnet,  'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Amount Cryptocurrency to buy\n   */\n  cryptoAmount?: number;\n}\n\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport type NetworkLabel = \"mainnet-beta\" | \"testnet\" | \"devnet\";\n\nexport interface TorusParams {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface | NetworkLabel;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://solana.tor.us,\n   *\n   * development uses http://localhost:8080 (expects torus-website to be run locally),\n   *\n   * testing uses https://solana-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Prefers to use localStorage instead of sessionStorage for torus iframe. Allows longer lived sessions\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useLocalStorage?: boolean;\n  /**\n   * Allows passing external data for initialize\n   *\n   * Defaults to empty object\n   */\n  extraParams?: { [keyof: string]: string };\n}\n\nexport interface TorusLoginParams {\n  loginProvider?: LOGIN_PROVIDER_TYPE;\n  login_hint?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  torusWidgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n\nexport interface RequestArguments<T> {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: T;\n}\n","import { EMBED_TRANSLATION_ITEM, LocaleLinks, LOGIN_PROVIDER } from \"./interfaces\";\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`,\n};\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"solana-embed\");\n","import { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { NetworkInterface, NetworkLabel } from \"./interfaces\";\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getWindowId = (): string => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (buildEnv: string): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://solana.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 600, width: 400 };\n\nexport function storageAvailable(type: \"localStorage\" | \"sessionStorage\"): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const getNetworkConfig = (label: NetworkLabel): NetworkInterface | undefined => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.mainnet-beta.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.testnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    default:\n      return undefined;\n  }\n};\n","import { createLoggerMiddleware, SafeEventEmitterProvider, SendCallBack } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  SafeEventEmitter,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  public readonly isTorus: true;\n\n  _rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  protected _state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n  async request<TArgs, TResponse>(args: RequestArguments<TArgs>): Promise<Maybe<TResponse>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract _initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract _rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInPageProvider#connect\n   */\n  protected abstract _handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected abstract _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport {\n  BUTTON_POSITION,\n  CommunicationProviderState,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER_TYPE,\n  ProviderOptions,\n  RequestArguments,\n  UnValidatedJsonRpcRequest,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\nimport { FEATURES_CONFIRM_WINDOW, getPopupFeatures, getUserLanguage } from \"./utils\";\n\nclass TorusCommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static _defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    torusWidgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  public embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  public torusUrl: string;\n\n  public dappStorageKey: string;\n\n  public windowRefs: Record<string, PopupHandler>;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusIframe: HTMLIFrameElement;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusCommunicationProvider._defaultState,\n    };\n\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params;\n        this._displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const { windowId, url } = params as Record<string, string>;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this._state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, dappStorageKey, torusAlertContainer, torusIframe } = params;\n      this.torusUrl = torusUrl as string;\n      this.dappStorageKey = dappStorageKey as string;\n      this.torusAlertContainer = torusAlertContainer as HTMLDivElement;\n      this.torusIframe = torusIframe as HTMLIFrameElement;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;\n      else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request<{ windowId: string }, unknown>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  _displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  hideTorusButton(): void {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload as JRPCRequest<unknown>[], cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  // Called if the iframe wants to close the window cause it is done processing the request\n  private _handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  private async _createPopupBlockAlert(windowId: string, url: string): Promise<void> {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  private getLogoUrl(): string {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n\nexport default TorusCommunicationProvider;\n","import { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\n\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static _defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusInPageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown[] | Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params as Record<string, unknown>);\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import { PublicKey, SignaturePubkeyPair, Transaction } from \"@solana/web3.js\";\nimport { COMMUNICATION_JRPC_METHODS } from \"@toruslabs/base-controllers\";\nimport { setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport TorusCommunicationProvider from \"./communicationProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport {\n  BUTTON_POSITION,\n  LOGIN_PROVIDER_TYPE,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WALLET_PATH,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport getSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  getTorusUrl,\n  getWindowId,\n  storageAvailable,\n} from \"./utils\";\n\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\n\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  isInitialized: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  public requestedLoginProvider?: LOGIN_PROVIDER_TYPE;\n\n  provider: TorusInPageProvider;\n\n  communicationProvider: TorusCommunicationProvider;\n\n  dappStorageKey: string;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusUrl: string;\n\n  private torusIframe: HTMLIFrameElement;\n\n  private styleLink: HTMLLinkElement;\n\n  constructor({ modalZIndex = 99999 }: TorusCtorArgs = {}) {\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn(): boolean {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network,\n    showTorusButton = false,\n    useLocalStorage = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    apiKey = \"torus-default\",\n    extraParams = {},\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv);\n    log.info(torusUrl, \"url loaded\");\n\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>(\n      `<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`\n    );\n\n    this.styleLink = htmlToElement<HTMLLinkElement>(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n    const handleSetup = async () => {\n      return new Promise<void>((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage(\n              {\n                buttonPosition,\n                apiKey,\n                network,\n                dappMetadata,\n                extraParams,\n              },\n              torusIframeUrl.origin\n            );\n            await this._setupWeb3({\n              torusUrl,\n            });\n            if (showTorusButton) this.showTorusButton();\n            else this.hideTorusButton();\n            this.isInitialized = true;\n            (window as any).torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login(params: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({ isFull: true });\n      }\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest(\n          { method: \"solana_requestAccounts\", params: [this.requestedLoginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve, reject)\n        );\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: UserInfo }): Promise<void> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const { privateKey, userInfo } = loginParams;\n    const { success } = await this.communicationProvider.request<{ privateKey: string; userInfo: UserInfo }, { success: boolean }>({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo,\n      },\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params: NetworkInterface): Promise<void> {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: { ...params },\n    });\n  }\n\n  async showWallet(path: WALLET_PATH, params: Record<string, string> = {}): Promise<void> {\n    const instanceId = await this.communicationProvider.request<[], string>({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: [],\n    });\n    const finalPath = path ? `/${path}` : \"\";\n\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach((x) => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({ url: finalUrl, features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW) });\n    walletWindow.open();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request<\n      { provider: PAYMENT_PROVIDER_TYPE; params: PaymentParams; windowId: string },\n      boolean\n    >({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: { provider, params, windowId },\n    });\n    return topupResponse;\n  }\n\n  // Solana specific API\n  async getAccounts() {\n    const response = (await this.provider.request({\n      method: \"getAccounts\",\n      params: [],\n    })) as string[];\n    return response;\n  }\n\n  async sendTransaction(transaction: Transaction): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"send_transaction\",\n      params: { message: transaction.serialize({ requireAllSignatures: false }).toString(\"hex\") },\n    })) as string;\n    return response;\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response: string = (await this.provider.request({\n      method: \"sign_transaction\",\n      params: { message: transaction.serializeMessage().toString(\"hex\"), messageOnly: true },\n    })) as string;\n\n    // reconstruct signature pair\n    const parsed = JSON.parse(response);\n    const signature: SignaturePubkeyPair = { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n\n  async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const encodedMessage: string[] = transactions.map((tx) => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses: string[] = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: { message: encodedMessage, messageOnly: true },\n    });\n\n    // reconstruct signature pairs\n    const signatures: SignaturePubkeyPair[] = responses.map((item) => {\n      const parsed = JSON.parse(item);\n      return { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    });\n\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = (await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data,\n      },\n    })) as Uint8Array;\n    return response;\n  }\n\n  async getGaslessPublicKey(): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: [],\n    })) as string;\n    return response;\n  }\n\n  // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n  private handleDappStorageKey(useLocalStorage: boolean) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;\n      else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  private async _setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload: JRPCRequest<unknown>, cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    };\n\n    // detect solana_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    await Promise.all([\n      inPageProvider._initializeState(),\n      communicationProvider._initializeState({\n        ...providerParams,\n        dappStorageKey: this.dappStorageKey,\n        torusAlertContainer: this.torusAlertContainer,\n        torusIframe: this.torusIframe,\n      }),\n    ]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\n\nexport default Torus;\n","export { default } from \"./embed\";\nexport { default as TorusInPageProvider } from \"./inPageProvider\";\nexport * from \"./interfaces\";\n"],"sourceRoot":""}