{"version":3,"sources":["webpack://OpenloginJrpc/webpack/bootstrap","webpack://OpenloginJrpc/external \"@babel/runtime/helpers/defineProperty\"","webpack://OpenloginJrpc/./src/serializableError.ts","webpack://OpenloginJrpc/external \"readable-stream\"","webpack://OpenloginJrpc/./src/safeEventEmitter.ts","webpack://OpenloginJrpc/./src/basePostMessageStream.ts","webpack://OpenloginJrpc/./src/substream.ts","webpack://OpenloginJrpc/external \"eth-rpc-errors\"","webpack://OpenloginJrpc/external \"end-of-stream\"","webpack://OpenloginJrpc/./src/jrpc.ts","webpack://OpenloginJrpc/./src/jrpcEngine.ts","webpack://OpenloginJrpc/./src/mux.ts","webpack://OpenloginJrpc/./src/postMessageStream.ts","webpack://OpenloginJrpc/external \"@toruslabs/openlogin-utils\"","webpack://OpenloginJrpc/external \"events\"","webpack://OpenloginJrpc/external \"fast-safe-stringify\"","webpack://OpenloginJrpc/external \"once\"","webpack://OpenloginJrpc/external \"pump\"","webpack://OpenloginJrpc/./src/index.ts"],"names":["SerializableError","Error","constructor","code","message","data","Number","isInteger","undefined","toString","stringify","stack","safeApply","handler","context","args","Reflect","apply","err","setTimeout","arrayClone","arr","n","length","copy","Array","i","SafeEventEmitter","EventEmitter","emit","type","doError","events","_events","error","er","len","listeners","noop","SYN","ACK","BRK","BasePostMessageStream","Duplex","name","target","targetWindow","window","targetOrigin","objectMode","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","_break","cork","_write","_onData","uncork","push","_postMessage","originConstraint","postMessage","event","origin","source","_read","_","cb","_destroy","removeEventListener","Substream","parent","_parent","chunk","_encoding","callback","getRpcPromiseCallback","resolve","reject","unwrapResult","response","isArray","result","createErrorMiddleware","log","req","res","next","end","method","done","createStreamMiddleware","idMap","readNoop","processResponse","id","Object","assign","processNotification","processMessage","isNotification","_err","stream","read","write","middleware","createScaffoldMiddleware","handlers","createIdRemapMiddleware","_end","originalId","newId","randomId","createLoggerMiddleware","logger","debug","createAsyncMiddleware","asyncMiddleware","resolveNextPromise","nextPromise","Promise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","JRPCEngine","_middleware","_runAllMiddleware","middlewareStack","returnHandlers","isComplete","_runMiddleware","reverse","serializeError","returnHandler","_runReturnHandlers","_checkForCompletion","handle","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","handlerCallback","reqs","responses","all","map","callerReq","jsonrpc","_processRequest","_error","mergeMiddleware","engine","forEach","createEngineStream","opts","on","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_substreams","createStream","substream","anyStreamEnd","destroy","ignoreStream","console","warn","_cb","once","eos","readable","writable","setupMultiplex","mux","getStream","streamHelper","pump","PostMessageStream","dataObj","dataObjData","params","dataObjDataParam","_origin","location"],"mappings":"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","file":"openloginJrpc.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","module.exports = require(\"readable-stream\");","import { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(data: unknown, _, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","module.exports = require(\"eth-rpc-errors\");","module.exports = require(\"end-of-stream\");","import { randomId } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport type Json = boolean | number | string | null | { [property: string]: Json } | Json[];\n\nexport type JRPCVersion = \"2.0\";\nexport type JRPCId = number | string | void;\n\nexport type ConsoleLike = Pick<Console, \"log\" | \"warn\" | \"error\" | \"debug\" | \"info\" | \"trace\">;\nexport interface JRPCBase {\n  jsonrpc?: JRPCVersion;\n  id?: JRPCId;\n}\n\nexport interface JRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: any;\n}\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport interface JRPCRequest<T> extends JRPCBase {\n  method: string;\n  params?: T;\n}\n\nexport type JRPCEngineNextCallback = (cb?: (done: (error?: Error) => void) => void) => void;\nexport type JRPCEngineEndCallback = (error?: Error) => void;\nexport type JRPCEngineReturnHandler = (done: (error?: Error) => void) => void;\n\ninterface IdMapValue {\n  req: JRPCRequest<unknown>;\n  res: JRPCResponse<unknown>;\n  next: JRPCEngineNextCallback;\n  end: JRPCEngineEndCallback;\n}\n\ninterface IdMap {\n  [requestId: string]: IdMapValue;\n}\n\nexport type JRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: JRPCResponse<U>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => void;\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error) {\n      log.error(`OpenLogin - RPC Error thrown: ${error.message}`, error);\n      res.error = new SerializableError({ code: -32603, message: error.message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\ntype ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport type AsyncJRPCEngineNextCallback = () => Promise<void>;\n\ntype Maybe<T> = Partial<T> | null | undefined;\n\nexport interface JRPCSuccess<T> extends JRPCBase {\n  result: Maybe<T>;\n}\n\nexport interface JRPCError {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n\nexport interface PendingJRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: Error | JRPCError;\n}\n\nexport interface JRPCFailure extends JRPCBase {\n  error: JRPCError;\n}\n\nexport type AsyncJRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: PendingJRPCResponse<U>, next: AsyncJRPCEngineNextCallback) => Promise<void>;\n\ntype ReturnHandlerCallback = (error: null | Error) => void;\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import { serializeError } from \"eth-rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCEngineReturnHandler, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"./jrpc\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[]\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import BasePostMessageStream from \"./basePostMessageStream\";\n\nexport default class PostMessageStream extends BasePostMessageStream {\n  _postMessage(data: unknown): void {\n    let originConstraint = this._targetOrigin;\n    if (typeof data === \"object\") {\n      const dataObj = data as Record<string, unknown>;\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data as Record<string, unknown>;\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0] as Record<string, unknown>;\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin as string;\n          }\n\n          // add a constraint for the response\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n}\n","module.exports = require(\"@toruslabs/openlogin-utils\");","module.exports = require(\"events\");","module.exports = require(\"fast-safe-stringify\");","module.exports = require(\"once\");","module.exports = require(\"pump\");","export { default as BasePostMessageStream } from \"./basePostMessageStream\";\nexport * from \"./jrpc\";\nexport * from \"./jrpcEngine\";\nexport * from \"./mux\";\nexport { default as PostMessageStream } from \"./postMessageStream\";\nexport { default as SafeEventEmitter } from \"./safeEventEmitter\";\nexport { default as SerializableError } from \"./serializableError\";\nexport { default as Substream } from \"./substream\";\nexport * from \"./utils\";\n"],"sourceRoot":""}