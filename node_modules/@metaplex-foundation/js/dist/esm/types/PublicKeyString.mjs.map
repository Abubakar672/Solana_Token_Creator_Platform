{"version":3,"file":"PublicKeyString.mjs","sources":["../../../src/types/PublicKeyString.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { assert } from '@/utils';\n\n/**\n * Synonym for `string` to differentiate strings that should contain a base58 representation of\n * a {@link PublicKey}\n *\n * @private\n */\nexport type PublicKeyString = string;\n\n/**\n * Checks if a string is valid base58 Solana via a Regex.\n * @private\n */\nexport function isValidSolanaAddress(address: string) {\n  return /^[0-9a-zA-Z]{43,88}$/.test(address);\n}\n\n/**\n * Checks if a string is valid PublicKey address.\n * @private\n */\nexport function isValidPublicKeyAddress(address: string) {\n  if (!isValidSolanaAddress(address) || address.length > 44) return false;\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\n/**\n * Checks if the {@link value} is valid base58 string for a PublicKey of a Solana Account.\n * @private\n */\nexport function isPublicKeyString(value: string): value is PublicKeyString {\n  return typeof value === 'string' && isValidPublicKeyAddress(value);\n}\n\n/**\n * Tries to convert the {@link value} to a PublicKey.\n *\n * @throws {@link AssertionError} if the {@link value} is not a valid base58 string for a PublicKey of a Solana\n * Account.\n * @private\n * @throws if value is not a valid PublicKey address\n */\nexport function convertToPublickKey(value: PublicKeyString): PublicKey {\n  assert(isPublicKeyString(value), `${value} is not a valid PublicKey`);\n  return new PublicKey(value);\n}\n"],"names":["isValidSolanaAddress","address","test","isValidPublicKeyAddress","length","PublicKey","_","isPublicKeyString","value","convertToPublickKey","assert"],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACO,SAASA,oBAAT,CAA8BC,OAA9B,EAA+C;AACpD,EAAA,OAAO,sBAAuBC,CAAAA,IAAvB,CAA4BD,OAA5B,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;;AACO,SAASE,uBAAT,CAAiCF,OAAjC,EAAkD;AACvD,EAAA,IAAI,CAACD,oBAAoB,CAACC,OAAD,CAArB,IAAkCA,OAAO,CAACG,MAAR,GAAiB,EAAvD,EAA2D,OAAO,KAAP,CAAA;;EAC3D,IAAI;IACF,IAAIC,SAAJ,CAAcJ,OAAd,CAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;GAFF,CAGE,OAAOK,CAAP,EAAU;AACV,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;AACF,CAAA;AAED;AACA;AACA;AACA;;AACO,SAASC,iBAAT,CAA2BC,KAA3B,EAAoE;EACzE,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BL,uBAAuB,CAACK,KAAD,CAA3D,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,mBAAT,CAA6BD,KAA7B,EAAgE;EACrEE,MAAM,CAACH,iBAAiB,CAACC,KAAD,CAAlB,EAA4B,CAAA,EAAEA,KAAM,CAAA,yBAAA,CAApC,CAAN,CAAA;AACA,EAAA,OAAO,IAAIH,SAAJ,CAAcG,KAAd,CAAP,CAAA;AACD;;;;"}