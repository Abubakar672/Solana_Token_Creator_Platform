{"version":3,"file":"ProgramClient.mjs","sources":["../../../../src/plugins/programModule/ProgramClient.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { MissingGpaBuilderError, ProgramNotRecognizedError } from '@/errors';\nimport { Program, Cluster } from '@/types';\nimport { GpaBuilder } from '@/utils';\n\nexport class ProgramClient {\n  constructor(protected readonly metaplex: Metaplex) {}\n\n  protected programs: Program[] = [];\n\n  register(program: Program): void {\n    this.programs.push(program);\n  }\n\n  all(): Program[] {\n    return this.programs;\n  }\n\n  allForCluster(cluster: Cluster): Program[] {\n    return this.programs.filter((program) => {\n      return program.clusterFilter?.(cluster) ?? true;\n    });\n  }\n\n  allForCurrentCluster(): Program[] {\n    return this.allForCluster(this.metaplex.cluster);\n  }\n\n  get(nameOrAddress: string | PublicKey): Program {\n    const programs = this.allForCurrentCluster();\n    const program =\n      typeof nameOrAddress === 'string'\n        ? programs.find((program) => program.name === nameOrAddress)\n        : programs.find((program) => program.address.equals(nameOrAddress));\n\n    if (!program) {\n      throw new ProgramNotRecognizedError(nameOrAddress, this.metaplex.cluster);\n    }\n\n    return program;\n  }\n\n  public getGpaBuilder<T extends GpaBuilder>(\n    nameOrAddress: string | PublicKey\n  ): T {\n    const program = this.get(nameOrAddress);\n\n    if (!program.gpaResolver) {\n      throw new MissingGpaBuilderError(program);\n    }\n\n    return program.gpaResolver(this.metaplex) as T;\n  }\n}\n"],"names":["ProgramClient","constructor","metaplex","register","program","programs","push","all","allForCluster","cluster","filter","clusterFilter","allForCurrentCluster","get","nameOrAddress","find","name","address","equals","ProgramNotRecognizedError","getGpaBuilder","gpaResolver","MissingGpaBuilderError"],"mappings":";;;AAMO,MAAMA,aAAN,CAAoB;EACzBC,WAAW,CAAoBC,QAApB,EAAwC;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAEnB,EAFmB,CAAA,CAAA;;IAAA,IAApBA,CAAAA,QAAoB,GAApBA,QAAoB,CAAA;AAAE,GAAA;;EAIrDC,QAAQ,CAACC,OAAD,EAAyB;AAC/B,IAAA,IAAA,CAAKC,QAAL,CAAcC,IAAd,CAAmBF,OAAnB,CAAA,CAAA;AACD,GAAA;;AAEDG,EAAAA,GAAG,GAAc;AACf,IAAA,OAAO,KAAKF,QAAZ,CAAA;AACD,GAAA;;EAEDG,aAAa,CAACC,OAAD,EAA8B;AACzC,IAAA,OAAO,KAAKJ,QAAL,CAAcK,MAAd,CAAsBN,OAAD,IAAa;AAAA,MAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;;MACvC,OAAOA,CAAAA,qBAAAA,GAAAA,CAAAA,sBAAAA,GAAAA,OAAO,CAACO,aAAf,MAAO,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAA,IAAA,CAAAP,OAAO,EAAiBK,OAAjB,CAAd,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA2C,IAA3C,CAAA;AACD,KAFM,CAAP,CAAA;AAGD,GAAA;;AAEDG,EAAAA,oBAAoB,GAAc;AAChC,IAAA,OAAO,KAAKJ,aAAL,CAAmB,KAAKN,QAAL,CAAcO,OAAjC,CAAP,CAAA;AACD,GAAA;;EAEDI,GAAG,CAACC,aAAD,EAA6C;AAC9C,IAAA,MAAMT,QAAQ,GAAG,IAAKO,CAAAA,oBAAL,EAAjB,CAAA;AACA,IAAA,MAAMR,OAAO,GACX,OAAOU,aAAP,KAAyB,QAAzB,GACIT,QAAQ,CAACU,IAAT,CAAeX,OAAD,IAAaA,OAAO,CAACY,IAAR,KAAiBF,aAA5C,CADJ,GAEIT,QAAQ,CAACU,IAAT,CAAeX,OAAD,IAAaA,OAAO,CAACa,OAAR,CAAgBC,MAAhB,CAAuBJ,aAAvB,CAA3B,CAHN,CAAA;;IAKA,IAAI,CAACV,OAAL,EAAc;MACZ,MAAM,IAAIe,yBAAJ,CAA8BL,aAA9B,EAA6C,IAAKZ,CAAAA,QAAL,CAAcO,OAA3D,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,OAAOL,OAAP,CAAA;AACD,GAAA;;EAEMgB,aAAa,CAClBN,aADkB,EAEf;AACH,IAAA,MAAMV,OAAO,GAAG,IAAA,CAAKS,GAAL,CAASC,aAAT,CAAhB,CAAA;;AAEA,IAAA,IAAI,CAACV,OAAO,CAACiB,WAAb,EAA0B;AACxB,MAAA,MAAM,IAAIC,sBAAJ,CAA2BlB,OAA3B,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,OAAOA,OAAO,CAACiB,WAAR,CAAoB,IAAA,CAAKnB,QAAzB,CAAP,CAAA;AACD,GAAA;;AA/CwB;;;;"}