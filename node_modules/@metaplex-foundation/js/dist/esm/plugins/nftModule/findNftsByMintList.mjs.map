{"version":3,"file":"findNftsByMintList.mjs","sources":["../../../../src/plugins/nftModule/findNftsByMintList.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport { findMetadataPda, parseMetadataAccount } from '@/programs';\nimport { Operation, OperationHandler, useOperation } from '@/types';\nimport { GmaBuilder, zipMap } from '@/utils';\nimport { Nft } from './Nft';\n\nconst Key = 'FindNftsByMintListOperation' as const;\nexport const findNftsByMintListOperation =\n  useOperation<FindNftsByMintListOperation>(Key);\nexport type FindNftsByMintListOperation = Operation<\n  typeof Key,\n  PublicKey[],\n  (Nft | null)[]\n>;\n\nexport const findNftsByMintListOnChainOperationHandler: OperationHandler<FindNftsByMintListOperation> =\n  {\n    handle: async (\n      operation: FindNftsByMintListOperation,\n      metaplex: Metaplex\n    ): Promise<(Nft | null)[]> => {\n      const mints = operation.input;\n      const metadataPdas = mints.map((mint) => findMetadataPda(mint));\n      const metadataInfos = await GmaBuilder.make(metaplex, metadataPdas).get();\n\n      return zipMap(\n        metadataPdas,\n        metadataInfos,\n        (metadataPda, metadataInfo) => {\n          if (!metadataInfo || !metadataInfo.exists) return null;\n\n          try {\n            const metadata = parseMetadataAccount(metadataInfo);\n            return new Nft(metadata, metaplex);\n          } catch (error) {\n            return null;\n          }\n        }\n      );\n    },\n  };\n"],"names":["Key","findNftsByMintListOperation","useOperation","findNftsByMintListOnChainOperationHandler","handle","operation","metaplex","mints","input","metadataPdas","map","mint","findMetadataPda","metadataInfos","GmaBuilder","make","get","zipMap","metadataPda","metadataInfo","exists","metadata","parseMetadataAccount","Nft","error"],"mappings":";;;;;;;AAOA,MAAMA,GAAG,GAAG,6BAAZ,CAAA;MACaC,2BAA2B,GACtCC,YAAY,CAA8BF,GAA9B,EADP;AAQA,MAAMG,yCAAwF,GACnG;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,KAGsB;AAC5B,IAAA,MAAMC,KAAK,GAAGF,SAAS,CAACG,KAAxB,CAAA;AACA,IAAA,MAAMC,YAAY,GAAGF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAUC,eAAe,CAACD,IAAD,CAAnC,CAArB,CAAA;AACA,IAAA,MAAME,aAAa,GAAG,MAAMC,UAAU,CAACC,IAAX,CAAgBT,QAAhB,EAA0BG,YAA1B,CAAwCO,CAAAA,GAAxC,EAA5B,CAAA;IAEA,OAAOC,MAAM,CACXR,YADW,EAEXI,aAFW,EAGX,CAACK,WAAD,EAAcC,YAAd,KAA+B;MAC7B,IAAI,CAACA,YAAD,IAAiB,CAACA,YAAY,CAACC,MAAnC,EAA2C,OAAO,IAAP,CAAA;;MAE3C,IAAI;AACF,QAAA,MAAMC,QAAQ,GAAGC,oBAAoB,CAACH,YAAD,CAArC,CAAA;AACA,QAAA,OAAO,IAAII,GAAJ,CAAQF,QAAR,EAAkBf,QAAlB,CAAP,CAAA;OAFF,CAGE,OAAOkB,KAAP,EAAc;AACd,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;AACF,KAZU,CAAb,CAAA;AAcD,GAAA;AAvBH;;;;"}