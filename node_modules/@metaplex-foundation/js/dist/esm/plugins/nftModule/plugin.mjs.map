{"version":3,"file":"plugin.mjs","sources":["../../../../src/plugins/nftModule/plugin.ts"],"sourcesContent":["import type { Metaplex } from '@/Metaplex';\nimport { MetaplexPlugin } from '@/types';\nimport { NftClient } from './NftClient';\nimport { createNftOperation, createNftOperationHandler } from './createNft';\nimport {\n  findNftByMintOnChainOperationHandler,\n  findNftByMintOperation,\n} from './findNftByMint';\nimport {\n  findNftsByCandyMachineOnChainOperationHandler,\n  findNftsByCandyMachineOperation,\n} from './findNftsByCandyMachine';\nimport {\n  findNftsByCreatorOnChainOperationHandler,\n  findNftsByCreatorOperation,\n} from './findNftsByCreator';\nimport {\n  findNftsByMintListOnChainOperationHandler,\n  findNftsByMintListOperation,\n} from './findNftsByMintList';\nimport {\n  findNftsByOwnerOnChainOperationHandler,\n  findNftsByOwnerOperation,\n} from './findNftsByOwner';\nimport {\n  printNewEditionOperation,\n  printNewEditionOperationHandler,\n} from './printNewEdition';\nimport { updateNftOperation, updateNftOperationHandler } from './updateNft';\nimport {\n  uploadMetadataOperation,\n  uploadMetadataOperationHandler,\n} from './uploadMetadata';\n\nexport const nftModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    const op = metaplex.operations();\n    op.register(createNftOperation, createNftOperationHandler);\n    op.register(findNftByMintOperation, findNftByMintOnChainOperationHandler);\n    op.register(\n      findNftsByCandyMachineOperation,\n      findNftsByCandyMachineOnChainOperationHandler\n    );\n    op.register(\n      findNftsByCreatorOperation,\n      findNftsByCreatorOnChainOperationHandler\n    );\n    op.register(\n      findNftsByMintListOperation,\n      findNftsByMintListOnChainOperationHandler\n    );\n    op.register(\n      findNftsByOwnerOperation,\n      findNftsByOwnerOnChainOperationHandler\n    );\n    op.register(printNewEditionOperation, printNewEditionOperationHandler);\n    op.register(updateNftOperation, updateNftOperationHandler);\n    op.register(uploadMetadataOperation, uploadMetadataOperationHandler);\n\n    metaplex.nfts = function () {\n      return new NftClient(this);\n    };\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    nfts(): NftClient;\n  }\n}\n"],"names":["nftModule","install","metaplex","op","operations","register","createNftOperation","createNftOperationHandler","findNftByMintOperation","findNftByMintOnChainOperationHandler","findNftsByCandyMachineOperation","findNftsByCandyMachineOnChainOperationHandler","findNftsByCreatorOperation","findNftsByCreatorOnChainOperationHandler","findNftsByMintListOperation","findNftsByMintListOnChainOperationHandler","findNftsByOwnerOperation","findNftsByOwnerOnChainOperationHandler","printNewEditionOperation","printNewEditionOperationHandler","updateNftOperation","updateNftOperationHandler","uploadMetadataOperation","uploadMetadataOperationHandler","nfts","NftClient"],"mappings":";;;;;;;;;;;AAkCO,MAAMA,SAAS,GAAG,OAAuB;EAC9CC,OAAO,CAACC,QAAD,EAAqB;AAC1B,IAAA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX,CAAA;AACAD,IAAAA,EAAE,CAACE,QAAH,CAAYC,kBAAZ,EAAgCC,yBAAhC,CAAA,CAAA;AACAJ,IAAAA,EAAE,CAACE,QAAH,CAAYG,sBAAZ,EAAoCC,oCAApC,CAAA,CAAA;AACAN,IAAAA,EAAE,CAACE,QAAH,CACEK,+BADF,EAEEC,6CAFF,CAAA,CAAA;AAIAR,IAAAA,EAAE,CAACE,QAAH,CACEO,0BADF,EAEEC,wCAFF,CAAA,CAAA;AAIAV,IAAAA,EAAE,CAACE,QAAH,CACES,2BADF,EAEEC,yCAFF,CAAA,CAAA;AAIAZ,IAAAA,EAAE,CAACE,QAAH,CACEW,wBADF,EAEEC,sCAFF,CAAA,CAAA;AAIAd,IAAAA,EAAE,CAACE,QAAH,CAAYa,wBAAZ,EAAsCC,+BAAtC,CAAA,CAAA;AACAhB,IAAAA,EAAE,CAACE,QAAH,CAAYe,kBAAZ,EAAgCC,yBAAhC,CAAA,CAAA;AACAlB,IAAAA,EAAE,CAACE,QAAH,CAAYiB,uBAAZ,EAAqCC,8BAArC,CAAA,CAAA;;IAEArB,QAAQ,CAACsB,IAAT,GAAgB,YAAY;AAC1B,MAAA,OAAO,IAAIC,SAAJ,CAAc,IAAd,CAAP,CAAA;KADF,CAAA;AAGD,GAAA;;AA5B6C,CAAvB;;;;"}