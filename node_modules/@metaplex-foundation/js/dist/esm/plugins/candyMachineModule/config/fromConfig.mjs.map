{"version":3,"file":"fromConfig.mjs","sources":["../../../../../src/plugins/candyMachineModule/config/fromConfig.ts"],"sourcesContent":["import {\n  CandyMachine,\n  CandyMachineArgs,\n  CandyMachineData,\n  Creator,\n} from '@metaplex-foundation/mpl-candy-machine';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { convertToMillisecondsSinceEpoch, convertToPublickKey } from '@/types';\nimport { CandyMachineConfigWithoutStorage } from './CandyMachineConfig';\nimport { creatorsConfigDefault } from './Creators';\nimport { endSettingsFromConfig } from './EndSettings';\nimport { gatekeeperFromConfig } from './Gatekeeper';\nimport { hiddenSettingsFromConfig } from './HiddenSettings';\nimport { whiteListMintSettingsFromConfig } from './WhitelistMint';\n\nexport type CandyMachineAddresses = {\n  candyMachineAddress: PublicKey;\n  authorityAddress: PublicKey;\n  walletAddress: PublicKey;\n  tokenMintAddress?: PublicKey;\n};\n\nexport function candyMachineDataFromConfig(\n  config: CandyMachineConfigWithoutStorage,\n  candyMachineAddress: PublicKey\n): CandyMachineData {\n  const configCreators =\n    config.creators ?? creatorsConfigDefault(config.solTreasuryAccount);\n  const creators: Creator[] = configCreators.map((creatorConfig) => ({\n    ...creatorConfig,\n    address: convertToPublickKey(creatorConfig.address),\n  }));\n\n  const goLiveDate = convertToMillisecondsSinceEpoch(config.goLiveDate);\n\n  const hiddenSettings =\n    hiddenSettingsFromConfig(config.hiddenSettings) ?? null;\n  const endSettings = endSettingsFromConfig(config.endSettings) ?? null;\n  const whitelistMintSettings =\n    whiteListMintSettingsFromConfig(config.whitelistMintSettings) ?? null;\n  const gatekeeper = gatekeeperFromConfig(config.gatekeeper) ?? null;\n\n  return {\n    uuid: candyMachineUuidFromAddress(candyMachineAddress),\n\n    price: new BN(config.price),\n    symbol: config.symbol ?? '',\n    sellerFeeBasisPoints: config.sellerFeeBasisPoints,\n\n    maxSupply: new BN(config.number),\n    isMutable: config.isMutable,\n    retainAuthority: config.retainAuthority,\n    goLiveDate,\n    itemsAvailable: new BN(config.number),\n\n    endSettings,\n    hiddenSettings,\n    whitelistMintSettings,\n    gatekeeper,\n\n    creators,\n  };\n}\nexport function candyMachineAccountDataFromConfig(\n  config: CandyMachineConfigWithoutStorage,\n  addresses: CandyMachineAddresses\n) {\n  const data = candyMachineDataFromConfig(\n    config,\n    addresses.candyMachineAddress\n  );\n  const args: CandyMachineArgs = {\n    authority: addresses.authorityAddress,\n    wallet: addresses.walletAddress,\n    tokenMint: addresses.tokenMintAddress ?? null,\n    itemsRedeemed: new BN(0),\n    data,\n  };\n\n  return CandyMachine.fromArgs(args);\n}\n\nfunction candyMachineUuidFromAddress(candyMachineAddress: PublicKey) {\n  // NOTE: repeating program business logic here which isn't ideal\n  return candyMachineAddress.toBase58().slice(0, 6);\n}\n"],"names":["candyMachineDataFromConfig","config","candyMachineAddress","configCreators","creators","creatorsConfigDefault","solTreasuryAccount","map","creatorConfig","address","convertToPublickKey","goLiveDate","convertToMillisecondsSinceEpoch","hiddenSettings","hiddenSettingsFromConfig","endSettings","endSettingsFromConfig","whitelistMintSettings","whiteListMintSettingsFromConfig","gatekeeper","gatekeeperFromConfig","uuid","candyMachineUuidFromAddress","price","BN","symbol","sellerFeeBasisPoints","maxSupply","number","isMutable","retainAuthority","itemsAvailable","candyMachineAccountDataFromConfig","addresses","data","args","authority","authorityAddress","wallet","walletAddress","tokenMint","tokenMintAddress","itemsRedeemed","CandyMachine","fromArgs","toBase58","slice"],"mappings":"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"}