{"version":3,"file":"Storage.mjs","sources":["../../../../../src/plugins/candyMachineModule/config/Storage.ts"],"sourcesContent":["/**\n * Uploads to arweave using Bundlr and payments are made in SOL (Recommended\n * option. Works on mainnet and devnet. Files are only stored for 7 days on\n * devnet.)\n */\nexport const ARWEAVE_SOL = 'arweave-sol';\n\n/**\n * Uploads to arweave and payments are made in AR (only works in mainnet and\n * requires an Arweave wallet)\n */\nexport const ARWEAVE_BUNDLE = 'arweave-bundle';\n\n/** Uploads to IPFS (must specify either Infura Project ID or Secret Key) */\nexport const IPFS = 'ipfs';\n\n/** Uploads to NFT.Storage (no payment required, works on all networks) */\nexport const NFT_STORAGE = 'nft-storage';\n\n/** Uploads to AWS (must specify AWS Bucket name) */\nexport const AWS = 'aws';\n\n/** Arweave specific storages */\nconst ArweaveStorages = [ARWEAVE_SOL, ARWEAVE_BUNDLE] as const;\n\n/** The existing storage options */\nexport const CandyMachineStorages = [\n  ...ArweaveStorages,\n  IPFS,\n  NFT_STORAGE,\n  AWS,\n] as const;\n\n/** Available storage options */\nexport type CandyMachineStorage = typeof CandyMachineStorages[number];\n\ntype BaseStorageConfig = {\n  awsS3Bucket?: string;\n  infuraProjectId?: string;\n  ipfsSecretKey?: string;\n  nftStorageKey?: string;\n};\n\n/**\n * Arweave specific Storage Options with required extra props\n * @property arweaveJwk - Arweave JWK (JSON Web Key) wallet file\n */\ntype ArweaveStorageConfig = BaseStorageConfig & {\n  storage: typeof ArweaveStorages[number];\n  arweaveJwk: string;\n};\n\n/**\n * IPFS specific Storage Options with required extra props\n * @property ipfsInfuraProjectId - Infura Project ID for IPFS\n * @property ipfsInfuraSecret - Infura Project Secret for IPFS\n */\ntype IpfsStorageConfig = BaseStorageConfig & {\n  storage: typeof IPFS;\n  infuraProjectId: string;\n  ipfsSecretKey: string;\n};\n\n/**\n * NftStorage specific Storage Options with required extra props\n * @property nftStorageKey - NFT.Storage API Key\n */\ntype NftStorageConfig = BaseStorageConfig & {\n  storage: typeof NFT_STORAGE;\n  nftStorageKey: string;\n};\n\n/**\n * AWS specific Storage Options with required extra props\n * @property awsS3Bucket - AWS Bucket name\n */\ntype AwsStorageConfig = BaseStorageConfig & {\n  storage: typeof AWS;\n  awsS3Bucket: string;\n};\n\n/**\n * Candy Machine Storage Options.\n * Specific config properties are only needed/available for the respective\n * storage provider.\n */\nexport type StorageConfig =\n  | ArweaveStorageConfig\n  | IpfsStorageConfig\n  | NftStorageConfig\n  | AwsStorageConfig;\n"],"names":["ARWEAVE_SOL","ARWEAVE_BUNDLE","IPFS","NFT_STORAGE","AWS","ArweaveStorages","CandyMachineStorages"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACO,MAAMA,WAAW,GAAG,cAApB;AAEP;AACA;AACA;AACA;;AACO,MAAMC,cAAc,GAAG,iBAAvB;AAEP;;AACO,MAAMC,IAAI,GAAG,OAAb;AAEP;;AACO,MAAMC,WAAW,GAAG,cAApB;AAEP;;AACO,MAAMC,GAAG,GAAG,MAAZ;AAEP;;AACA,MAAMC,eAAe,GAAG,CAACL,WAAD,EAAcC,cAAd,CAAxB,CAAA;AAEA;;AACaK,MAAAA,oBAAoB,GAAG,CAClC,GAAGD,eAD+B,EAElCH,IAFkC,EAGlCC,WAHkC,EAIlCC,GAJkC,EAA7B;AAOP;;;;"}