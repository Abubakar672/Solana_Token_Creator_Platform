{"version":3,"file":"updateCandyMachine.mjs","sources":["../../../../src/plugins/candyMachineModule/updateCandyMachine.ts"],"sourcesContent":["import { CandyMachineData } from '@metaplex-foundation/mpl-candy-machine';\nimport {\n  ConfirmOptions,\n  PublicKey,\n  RpcResponseAndContext,\n  SignatureResult,\n} from '@solana/web3.js';\nimport { Operation, OperationHandler, Signer, useOperation } from '@/types';\nimport { createUpdateCandyMachineInstructionWithSigners } from '@/programs';\nimport { Metaplex } from '@/Metaplex';\nimport { TransactionBuilder } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\nconst Key = 'UpdateCandyMachineOperation' as const;\nexport const updateCandyMachineOperation =\n  useOperation<UpdateCandyMachineOperation>(Key);\n\nexport type UpdateCandyMachineOperation = Operation<\n  typeof Key,\n  UpdateCandyMachineInput,\n  UpdateCandyMachineOutput\n>;\n\nexport type UpdateCandyMachineInputWithoutCandyMachineData = {\n  // Accounts\n  candyMachineAddress: PublicKey;\n  walletAddress: PublicKey;\n  authoritySigner: Signer;\n\n  // Transaction Options.\n  confirmOptions?: ConfirmOptions;\n};\n\nexport type UpdateCandyMachineInput =\n  UpdateCandyMachineInputWithoutCandyMachineData & CandyMachineData;\n\nexport type UpdateCandyMachineOutput = {\n  // Transaction Result.\n  transactionId: string;\n  confirmResponse: RpcResponseAndContext<SignatureResult>;\n};\n\n// -----------------\n// Handler\n// -----------------\nexport const updateCandyMachineOperationHandler: OperationHandler<UpdateCandyMachineOperation> =\n  {\n    async handle(\n      operation: UpdateCandyMachineOperation,\n      metaplex: Metaplex\n    ): Promise<UpdateCandyMachineOutput> {\n      const {\n        candyMachineAddress,\n        walletAddress,\n        authoritySigner,\n        confirmOptions,\n        ...candyMachineData\n      } = operation.input;\n\n      const { signature, confirmResponse } = await metaplex\n        .rpc()\n        .sendAndConfirmTransaction(\n          TransactionBuilder.make().add(\n            createUpdateCandyMachineInstructionWithSigners({\n              candyMachine: candyMachineAddress,\n              wallet: walletAddress,\n              authority: authoritySigner,\n              data: candyMachineData,\n            })\n          ),\n          undefined,\n          confirmOptions\n        );\n\n      return {\n        transactionId: signature,\n        confirmResponse,\n      };\n    },\n  };\n"],"names":["Key","updateCandyMachineOperation","useOperation","updateCandyMachineOperationHandler","handle","operation","metaplex","candyMachineAddress","walletAddress","authoritySigner","confirmOptions","candyMachineData","input","signature","confirmResponse","rpc","sendAndConfirmTransaction","TransactionBuilder","make","add","createUpdateCandyMachineInstructionWithSigners","candyMachine","wallet","authority","data","undefined","transactionId"],"mappings":";;;;AAaA;AACA;;AACA,MAAMA,GAAG,GAAG,6BAAZ,CAAA;MACaC,2BAA2B,GACtCC,YAAY,CAA8BF,GAA9B,EADP;AA4BP;AACA;AACA;AACO,MAAMG,kCAAiF,GAC5F;AACE,EAAA,MAAMC,MAAN,CACEC,SADF,EAEEC,QAFF,EAGqC;IACnC,MAAM;MACJC,mBADI;MAEJC,aAFI;MAGJC,eAHI;MAIJC,cAJI;MAKJ,GAAGC,gBAAAA;KACDN,GAAAA,SAAS,CAACO,KANd,CAAA;IAQA,MAAM;MAAEC,SAAF;AAAaC,MAAAA,eAAAA;AAAb,KAAA,GAAiC,MAAMR,QAAQ,CAClDS,GAD0C,GAE1CC,yBAF0C,CAGzCC,kBAAkB,CAACC,IAAnB,EAAA,CAA0BC,GAA1B,CACEC,8CAA8C,CAAC;AAC7CC,MAAAA,YAAY,EAAEd,mBAD+B;AAE7Ce,MAAAA,MAAM,EAAEd,aAFqC;AAG7Ce,MAAAA,SAAS,EAAEd,eAHkC;AAI7Ce,MAAAA,IAAI,EAAEb,gBAAAA;AAJuC,KAAD,CADhD,CAHyC,EAWzCc,SAXyC,EAYzCf,cAZyC,CAA7C,CAAA;IAeA,OAAO;AACLgB,MAAAA,aAAa,EAAEb,SADV;AAELC,MAAAA,eAAAA;KAFF,CAAA;AAID,GAAA;;AAhCH;;;;"}