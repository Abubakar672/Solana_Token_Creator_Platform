{"version":3,"file":"GpaBuilder.mjs","sources":["../../../src/utils/GpaBuilder.ts"],"sourcesContent":["import {\n  GetProgramAccountsConfig,\n  GetProgramAccountsFilter,\n  PublicKey,\n} from '@solana/web3.js';\nimport { Buffer } from 'buffer';\nimport base58 from 'bs58';\nimport BN from 'bn.js';\nimport { Metaplex } from '@/Metaplex';\nimport { UnparsedAccount } from '@/types';\nimport { GmaBuilder, GmaBuilderOptions } from './GmaBuilder';\nimport { Postpone } from './Postpone';\n\nexport type GpaSortCallback = (\n  a: UnparsedAccount,\n  b: UnparsedAccount\n) => number;\n\nexport class GpaBuilder {\n  /** The connection instance to use when fetching accounts. */\n  protected readonly metaplex: Metaplex;\n\n  /** The public key of the program we want to retrieve accounts from. */\n  protected readonly programId: PublicKey;\n\n  /** The configs to use when fetching program accounts. */\n  protected config: GetProgramAccountsConfig = {};\n\n  /** When provided, reorder accounts using this callback. */\n  protected sortCallback?: GpaSortCallback;\n\n  constructor(metaplex: Metaplex, programId: PublicKey) {\n    this.metaplex = metaplex;\n    this.programId = programId;\n  }\n\n  mergeConfig(config: GetProgramAccountsConfig) {\n    this.config = { ...this.config, ...config };\n\n    return this;\n  }\n\n  slice(offset: number, length: number) {\n    this.config.dataSlice = { offset, length };\n\n    return this;\n  }\n\n  withoutData() {\n    return this.slice(0, 0);\n  }\n\n  addFilter(...filters: GetProgramAccountsFilter[]) {\n    if (!this.config.filters) {\n      this.config.filters = [];\n    }\n\n    this.config.filters.push(...filters);\n\n    return this;\n  }\n\n  where(offset: number, bytes: string | Buffer | PublicKey | BN | number) {\n    if (bytes instanceof Buffer) {\n      bytes = base58.encode(bytes);\n    } else if (bytes instanceof PublicKey) {\n      bytes = bytes.toBase58();\n    } else if (bytes instanceof BN) {\n      bytes = base58.encode(bytes.toArray());\n    } else if (typeof bytes !== 'string') {\n      bytes = base58.encode(new BN(bytes, 'le').toArray());\n    }\n\n    return this.addFilter({ memcmp: { offset, bytes } });\n  }\n\n  whereSize(dataSize: number) {\n    return this.addFilter({ dataSize });\n  }\n\n  sortUsing(callback: GpaSortCallback) {\n    this.sortCallback = callback;\n\n    return this;\n  }\n\n  async get(): Promise<UnparsedAccount[]> {\n    const accounts = await this.metaplex\n      .rpc()\n      .getProgramAccounts(this.programId, this.config);\n\n    if (this.sortCallback) {\n      accounts.sort(this.sortCallback);\n    }\n\n    return accounts;\n  }\n\n  lazy(): Postpone<UnparsedAccount[]> {\n    return Postpone.make(() => this.get());\n  }\n\n  async getAndMap<T>(callback: (account: UnparsedAccount) => T): Promise<T[]> {\n    return this.lazy().map(callback).run();\n  }\n\n  async getPublicKeys(): Promise<PublicKey[]> {\n    return this.getAndMap((account) => account.publicKey);\n  }\n\n  async getDataAsPublicKeys(): Promise<PublicKey[]> {\n    return this.getAndMap((account) => new PublicKey(account.data));\n  }\n\n  getMultipleAccounts(\n    callback?: (account: UnparsedAccount) => PublicKey,\n    options?: GmaBuilderOptions\n  ): Postpone<GmaBuilder> {\n    const cb = callback ?? ((account) => new PublicKey(account.data));\n\n    return Postpone.make(async () => {\n      return new GmaBuilder(this.metaplex, await this.getAndMap(cb), options);\n    });\n  }\n}\n"],"names":["GpaBuilder","constructor","metaplex","programId","mergeConfig","config","slice","offset","length","dataSlice","withoutData","addFilter","filters","push","where","bytes","Buffer","base58","encode","PublicKey","toBase58","BN","toArray","memcmp","whereSize","dataSize","sortUsing","callback","sortCallback","get","accounts","rpc","getProgramAccounts","sort","lazy","Postpone","make","getAndMap","map","run","getPublicKeys","account","publicKey","getDataAsPublicKeys","data","getMultipleAccounts","options","cb","GmaBuilder"],"mappings":"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"}