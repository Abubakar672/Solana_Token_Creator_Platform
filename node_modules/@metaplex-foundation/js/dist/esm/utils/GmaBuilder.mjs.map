{"version":3,"file":"GmaBuilder.mjs","sources":["../../../src/utils/GmaBuilder.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport { UnparsedMaybeAccount } from '@/types';\nimport { Postpone } from './Postpone';\nimport { chunk } from './common';\n\nexport interface GmaBuilderOptions {\n  chunkSize?: number;\n}\n\nexport class GmaBuilder {\n  protected readonly metaplex: Metaplex;\n  protected readonly publicKeys: PublicKey[];\n  protected chunkSize: number;\n\n  constructor(\n    metaplex: Metaplex,\n    publicKeys: PublicKey[],\n    options: GmaBuilderOptions = {}\n  ) {\n    this.metaplex = metaplex;\n    this.chunkSize = options.chunkSize ?? 100;\n    this.publicKeys = publicKeys;\n  }\n\n  static make(\n    metaplex: Metaplex,\n    publicKeys: PublicKey[],\n    options: GmaBuilderOptions = {}\n  ) {\n    return new GmaBuilder(metaplex, publicKeys, options);\n  }\n\n  chunkBy(n: number) {\n    this.chunkSize = n;\n\n    return this;\n  }\n\n  addPublicKeys(publicKeys: PublicKey[]) {\n    this.publicKeys.push(...publicKeys);\n\n    return this;\n  }\n\n  getPublicKeys(): PublicKey[] {\n    return this.publicKeys;\n  }\n\n  getUniquePublicKeys(): PublicKey[] {\n    // TODO: Only send unique keys and reconciliate after call.\n    return this.getPublicKeys();\n  }\n\n  async getFirst(n?: number): Promise<UnparsedMaybeAccount[]> {\n    const end = this.boundNumber(n ?? 1);\n\n    return this.getChunks(this.getPublicKeys().slice(0, end));\n  }\n\n  async getLast(n?: number): Promise<UnparsedMaybeAccount[]> {\n    const start = this.boundNumber(n ?? 1);\n\n    return this.getChunks(this.getPublicKeys().slice(-start));\n  }\n\n  async getBetween(\n    start: number,\n    end: number\n  ): Promise<UnparsedMaybeAccount[]> {\n    start = this.boundNumber(start);\n    end = this.boundNumber(end);\n    [start, end] = start > end ? [end, start] : [start, end];\n\n    return this.getChunks(this.getPublicKeys().slice(start, end));\n  }\n\n  async getPage(\n    page: number,\n    perPage: number\n  ): Promise<UnparsedMaybeAccount[]> {\n    return this.getBetween((page - 1) * perPage, page * perPage);\n  }\n\n  async get(): Promise<UnparsedMaybeAccount[]> {\n    return this.getChunks(this.getPublicKeys());\n  }\n\n  lazy(): Postpone<UnparsedMaybeAccount[]> {\n    return Postpone.make(async () => this.get());\n  }\n\n  async getAndMap<T>(\n    callback: (account: UnparsedMaybeAccount) => T\n  ): Promise<T[]> {\n    return this.lazy().map(callback).run();\n  }\n\n  protected async getChunks(\n    publicKeys: PublicKey[]\n  ): Promise<UnparsedMaybeAccount[]> {\n    const chunks = chunk(publicKeys, this.chunkSize);\n    const chunkPromises = chunks.map((chunk) => this.getChunk(chunk));\n    const resolvedChunks = await Promise.allSettled(chunkPromises);\n\n    return resolvedChunks.flatMap((result) =>\n      result.status === 'fulfilled' ? result.value : []\n    );\n  }\n\n  protected async getChunk(\n    publicKeys: PublicKey[]\n  ): Promise<UnparsedMaybeAccount[]> {\n    try {\n      // TODO: Use lower level RPC call to add dataSlice support.\n      return await this.metaplex.rpc().getMultipleAccounts(publicKeys);\n    } catch (error) {\n      // TODO: Throw error instead?\n      return publicKeys.map((publicKey) => ({\n        publicKey: publicKey,\n        exists: false,\n      }));\n    }\n  }\n\n  protected boundNumber(n: number): number {\n    return this.boundIndex(n - 1) + 1;\n  }\n\n  protected boundIndex(index: number): number {\n    index = index < 0 ? 0 : index;\n    index =\n      index >= this.publicKeys.length ? this.publicKeys.length - 1 : index;\n\n    return index;\n  }\n}\n"],"names":["GmaBuilder","constructor","metaplex","publicKeys","options","chunkSize","make","chunkBy","n","addPublicKeys","push","getPublicKeys","getUniquePublicKeys","getFirst","end","boundNumber","getChunks","slice","getLast","start","getBetween","getPage","page","perPage","get","lazy","Postpone","getAndMap","callback","map","run","chunks","chunk","chunkPromises","getChunk","resolvedChunks","Promise","allSettled","flatMap","result","status","value","rpc","getMultipleAccounts","error","publicKey","exists","boundIndex","index","length"],"mappings":"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"}