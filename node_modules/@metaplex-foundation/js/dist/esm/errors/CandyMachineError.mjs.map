{"version":3,"file":"CandyMachineError.mjs","sources":["../../../src/errors/CandyMachineError.ts"],"sourcesContent":["import { bignum } from '@metaplex-foundation/beet';\nimport { ConfigLine } from '@metaplex-foundation/mpl-candy-machine';\nimport { PublicKey } from '@solana/web3.js';\nimport {\n  MetaplexError,\n  MetaplexErrorInputWithoutSource,\n} from './MetaplexError';\n\nexport class CandyMachineError extends MetaplexError {\n  constructor(input: MetaplexErrorInputWithoutSource) {\n    super({\n      ...input,\n      key: `plugin.candy_machine.${input.key}`,\n      title: `Candy Machine > ${input.title}`,\n      source: 'plugin',\n      sourceDetails: 'Candy Machine',\n    });\n  }\n}\n\nexport class CandyMachineNotFoundError extends CandyMachineError {\n  constructor(candyMachineAddress: PublicKey, cause?: Error) {\n    super({\n      cause,\n      key: 'candy_machine_not_found',\n      title: 'CandyMachine Not Found',\n      problem:\n        'No account could be found for the provided candy machine address: ' +\n        `[${candyMachineAddress.toBase58()}].`,\n      solution:\n        'Ensure the provided candy machine address is valid and that an associated ' +\n        'Metadata account exists on the blockchain.',\n    });\n  }\n}\n\nexport class CreatedCandyMachineNotFoundError extends CandyMachineError {\n  constructor(candyMachineAddress: PublicKey, cause?: Error) {\n    super({\n      cause,\n      key: 'created_candy_machine_not_found',\n      title: 'Created CandyMachine Not Found',\n      problem:\n        'No account could be found for the candy machine that the client just created: ' +\n        `[${candyMachineAddress.toBase58()}].`,\n      solution:\n        'Ensure that the candy machine could be created properly and without errors.' +\n        'If the problem persists please file an issue.',\n    });\n  }\n}\n\nexport class CandyMachineToUpdateNotFoundError extends CandyMachineError {\n  constructor(candyMachineAddress: PublicKey, cause?: Error) {\n    super({\n      cause,\n      key: 'candy_machine_to_update_not_found',\n      title: 'CandyMachine to update Not Found',\n      problem:\n        'No account could be found for the candy machine that the client is trying to update: ' +\n        `[${candyMachineAddress.toBase58()}].`,\n      solution: 'Ensure that the candy machine exists at the provided address.',\n    });\n  }\n}\n\nexport class UpdatedCandyMachineNotFoundError extends CandyMachineError {\n  constructor(candyMachineAddress: PublicKey, cause?: Error) {\n    super({\n      cause,\n      key: 'updated_candy_machine_not_found',\n      title: 'Updated CandyMachine Not Found',\n      problem:\n        'No account could be found for the candy machine that the client just updated: ' +\n        `[${candyMachineAddress.toBase58()}].`,\n      solution:\n        'Ensure that the candy machine could be updated properly and without errors.' +\n        'If the problem persists please file an issue.',\n    });\n  }\n}\n\nexport class CandyMachinesNotFoundByAuthorityError extends CandyMachineError {\n  constructor(authorityAddress: PublicKey, cause?: Error) {\n    super({\n      cause,\n      key: 'candy_machine_by_authority_not_found',\n      title: 'CandyMachine By Authority Not Found',\n      problem:\n        'No candy machine account could be found for the authority: ' +\n        `[${authorityAddress.toBase58()}].`,\n      solution:\n        'Ensure that you entered the correct authority and are connecting to the cluster where you created the candy machine.' +\n        `Navigate to https://explorer.solana.com/address/${authorityAddress.toBase58()} find candy machines with the authority.`,\n    });\n  }\n}\n\nexport class NoCandyMachineFoundForAuthorityMatchesUuidError extends CandyMachineError {\n  constructor(\n    authorityAddress: PublicKey,\n    uuid: string,\n    candyMachineAddresses: PublicKey[],\n    cause?: Error\n  ) {\n    const addresses = candyMachineAddresses.map((address) =>\n      address.toBase58()\n    );\n    super({\n      cause,\n      key: 'no_candy_machine_found_for_authority_matches_uuid',\n      title: 'No Candy Machine Found for Authority Matches Uuid',\n      problem:\n        'None of the candy machines for the authority matched the provided uuid: ' +\n        `[ uuid: ${uuid}, authority: ${authorityAddress.toBase58()}].`,\n      solution:\n        `Investigate which of the following candy machines is the correct one: [${addresses}]` +\n        ` and correct the uuid accordingly.`,\n    });\n  }\n}\n\nexport class MoreThanOneCandyMachineFoundByAuthorityAndUuidError extends CandyMachineError {\n  constructor(\n    authorityAddress: PublicKey,\n    uuid: string,\n    candyMachineAddresses: PublicKey[],\n    cause?: Error\n  ) {\n    const addresses = candyMachineAddresses.map((address) =>\n      address.toBase58()\n    );\n    super({\n      cause,\n      key: 'more_than_one_candy_machine_found_by_authority_and_uuid',\n      title: 'More Than One Candy Machine Found By Authority And Uuid',\n      problem:\n        'More than one candy machine matched the provided uuid and authority: ' +\n        `[${uuid} and ${authorityAddress.toBase58()}].`,\n      solution:\n        `Investigate which of the following candy machines is the correct one: [${addresses}]` +\n        ` and load find them directly by CandyMachineAddress.`,\n    });\n  }\n}\n\nexport class CandyMachineAlreadyHasThisAuthorityError extends CandyMachineError {\n  constructor(authorityAddress: PublicKey, cause?: Error) {\n    super({\n      cause,\n      key: 'candy_machine_already_has_this_authority',\n      title: 'Candy Machine Already Has This Authority',\n      problem:\n        'The current authority of the candy machine is the same as the new authority provided: ' +\n        `[${authorityAddress.toBase58()}].`,\n      solution:\n        'Double check the new authority you want to use for this Candy Machine.',\n    });\n  }\n}\n\nexport class CandyMachineIsFullError extends CandyMachineError {\n  constructor(index: number, maxSupply: bignum, cause?: Error) {\n    const asset = index + 1;\n    super({\n      cause,\n      key: 'candy_machine_is_full',\n      title: 'Candy Machine Is Full',\n      problem: `Trying to add asset number ${asset}, but candy machine only can hold ${maxSupply} assets.`,\n      solution:\n        'Limit number of assets you are adding or create a new Candy Machine that can hold more.',\n    });\n  }\n}\n\nexport class CandyMachineCannotAddAmountError extends CandyMachineError {\n  constructor(index: number, amount: number, maxSupply: bignum, cause?: Error) {\n    super({\n      cause,\n      key: 'candy_machine_cannot_add_amount',\n      title: 'Candy Machine Cannot Add Amount',\n      problem: `Trying to add ${amount} assets to candy machine that already has ${index} assets and can only hold ${maxSupply} assets.`,\n      solution:\n        'Limit number of assets you are adding or create a new Candy Machine that can hold more.',\n    });\n  }\n}\n\nexport class CandyMachineAddConfigConstraintsViolatedError extends CandyMachineError {\n  constructor(index: number, configLine: ConfigLine, cause?: Error) {\n    super({\n      cause,\n      key: 'candy_machine_add_config_constraints_violated',\n      title: 'Candy Machine Add Config Constraints Violated',\n      problem: `Trying to add an asset with name \"${configLine.name}\" and uri: \"${configLine.uri}\" to candy machine at index ${index} that violates constraints.`,\n      solution: 'Fix the name or URI of this asset and try again.',\n    });\n  }\n}\n"],"names":["CandyMachineError","MetaplexError","constructor","input","key","title","source","sourceDetails","CandyMachineNotFoundError","candyMachineAddress","cause","problem","toBase58","solution","CreatedCandyMachineNotFoundError","CandyMachineToUpdateNotFoundError","UpdatedCandyMachineNotFoundError","CandyMachinesNotFoundByAuthorityError","authorityAddress","NoCandyMachineFoundForAuthorityMatchesUuidError","uuid","candyMachineAddresses","addresses","map","address","MoreThanOneCandyMachineFoundByAuthorityAndUuidError","CandyMachineAlreadyHasThisAuthorityError","CandyMachineIsFullError","index","maxSupply","asset","CandyMachineCannotAddAmountError","amount","CandyMachineAddConfigConstraintsViolatedError","configLine","name","uri"],"mappings":"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"}