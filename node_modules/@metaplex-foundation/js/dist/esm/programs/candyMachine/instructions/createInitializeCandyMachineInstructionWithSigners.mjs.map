{"version":3,"file":"createInitializeCandyMachineInstructionWithSigners.mjs","sources":["../../../../../src/programs/candyMachine/instructions/createInitializeCandyMachineInstructionWithSigners.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport {\n  CandyMachineData,\n  createInitializeCandyMachineInstruction,\n} from '@metaplex-foundation/mpl-candy-machine';\nimport { Signer } from '@/types';\nimport { InstructionWithSigners } from '@/utils';\n\nexport type CreateInitializeCandyMachineInstructionWithSignersParams = {\n  data: CandyMachineData;\n  candyMachine: Signer;\n  payer: Signer;\n  wallet: PublicKey;\n  authority: PublicKey;\n  instructionKey?: string;\n};\n\nexport const createInitializeCandyMachineInstructionWithSigners = (\n  params: CreateInitializeCandyMachineInstructionWithSignersParams\n): InstructionWithSigners => {\n  const {\n    data,\n    candyMachine,\n    wallet,\n    authority,\n    payer,\n    instructionKey = 'initializeCandyMachine',\n  } = params;\n\n  return {\n    instruction: createInitializeCandyMachineInstruction(\n      {\n        candyMachine: candyMachine.publicKey,\n        wallet,\n        authority,\n        payer: payer.publicKey,\n      },\n      { data }\n    ),\n    signers: [candyMachine, payer],\n    key: instructionKey,\n  };\n};\n"],"names":["createInitializeCandyMachineInstructionWithSigners","params","data","candyMachine","wallet","authority","payer","instructionKey","instruction","createInitializeCandyMachineInstruction","publicKey","signers","key"],"mappings":";;AAiBaA,MAAAA,kDAAkD,GAC7DC,MADgE,IAErC;EAC3B,MAAM;IACJC,IADI;IAEJC,YAFI;IAGJC,MAHI;IAIJC,SAJI;IAKJC,KALI;AAMJC,IAAAA,cAAc,GAAG,wBAAA;AANb,GAAA,GAOFN,MAPJ,CAAA;EASA,OAAO;IACLO,WAAW,EAAEC,uCAAuC,CAClD;MACEN,YAAY,EAAEA,YAAY,CAACO,SAD7B;MAEEN,MAFF;MAGEC,SAHF;MAIEC,KAAK,EAAEA,KAAK,CAACI,SAAAA;AAJf,KADkD,EAOlD;AAAER,MAAAA,IAAAA;AAAF,KAPkD,CAD/C;AAULS,IAAAA,OAAO,EAAE,CAACR,YAAD,EAAeG,KAAf,CAVJ;AAWLM,IAAAA,GAAG,EAAEL,cAAAA;GAXP,CAAA;AAaD;;;;"}