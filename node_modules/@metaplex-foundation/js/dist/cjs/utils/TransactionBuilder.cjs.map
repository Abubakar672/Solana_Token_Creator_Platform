{"version":3,"file":"TransactionBuilder.cjs","sources":["../../../src/utils/TransactionBuilder.ts"],"sourcesContent":["import {\n  Blockhash,\n  PublicKey,\n  SignaturePubkeyPair,\n  Transaction,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { Signer } from '@/types';\n\nexport interface InstructionWithSigners {\n  key?: string;\n  instruction: TransactionInstruction;\n  signers: Signer[];\n}\n\ntype TransactionOptions = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is exportd expired */\n  lastValidBlockHeight: number;\n};\n\nexport class TransactionBuilder {\n  /** The list of all instructions and their respective signers. */\n  private records: InstructionWithSigners[] = [];\n\n  /** Options used when building the transaction. */\n  private transactionOptions?: TransactionOptions;\n\n  /** The signer to use to pay for transaction fees. */\n  private feePayer: Signer | undefined = undefined;\n\n  constructor(transactionOptions?: TransactionOptions) {\n    this.transactionOptions = transactionOptions;\n  }\n\n  static make(transactionOptions?: TransactionOptions) {\n    return new TransactionBuilder(transactionOptions);\n  }\n\n  prepend(\n    ...txs: (InstructionWithSigners | TransactionBuilder)[]\n  ): TransactionBuilder {\n    const newRecords = txs.flatMap((tx) =>\n      tx instanceof TransactionBuilder ? tx.getInstructionsWithSigners() : [tx]\n    );\n    this.records = [...newRecords, ...this.records];\n\n    return this;\n  }\n\n  append(\n    ...txs: (InstructionWithSigners | TransactionBuilder)[]\n  ): TransactionBuilder {\n    const newRecords = txs.flatMap((tx) =>\n      tx instanceof TransactionBuilder ? tx.getInstructionsWithSigners() : [tx]\n    );\n    this.records = [...this.records, ...newRecords];\n\n    return this;\n  }\n\n  add(\n    ...txs: (InstructionWithSigners | TransactionBuilder)[]\n  ): TransactionBuilder {\n    return this.append(...txs);\n  }\n\n  splitUsingKey(\n    key: string,\n    include: boolean = true\n  ): [TransactionBuilder, TransactionBuilder] {\n    const firstBuilder = new TransactionBuilder(this.transactionOptions);\n    const secondBuilder = new TransactionBuilder(this.transactionOptions);\n    let keyPosition = this.records.findIndex((record) => record.key === key);\n\n    if (keyPosition > -1) {\n      keyPosition += include ? 1 : 0;\n      firstBuilder.add(...this.records.slice(0, keyPosition));\n      firstBuilder.add(...this.records.slice(keyPosition));\n    } else {\n      firstBuilder.add(this);\n    }\n\n    return [firstBuilder, secondBuilder];\n  }\n\n  splitBeforeKey(key: string): [TransactionBuilder, TransactionBuilder] {\n    return this.splitUsingKey(key, false);\n  }\n\n  splitAfterKey(key: string): [TransactionBuilder, TransactionBuilder] {\n    return this.splitUsingKey(key, true);\n  }\n\n  getInstructionsWithSigners(): InstructionWithSigners[] {\n    return this.records;\n  }\n\n  getInstructions(): TransactionInstruction[] {\n    return this.records.map((record) => record.instruction);\n  }\n\n  getSigners(): Signer[] {\n    const feePayer = this.feePayer == null ? [] : [this.feePayer];\n    const signers = this.records.flatMap((record) => record.signers);\n\n    return [...feePayer, ...signers];\n  }\n\n  setTransactionOptions(\n    transactionOptions: TransactionOptions\n  ): TransactionBuilder {\n    this.transactionOptions = transactionOptions;\n\n    return this;\n  }\n\n  getTransactionOptions(): TransactionOptions | undefined {\n    return this.transactionOptions;\n  }\n\n  setFeePayer(feePayer: Signer): TransactionBuilder {\n    this.feePayer = feePayer;\n\n    return this;\n  }\n\n  getFeePayer(): PublicKey | undefined {\n    return this.feePayer?.publicKey;\n  }\n\n  when(\n    condition: boolean,\n    callback: (tx: TransactionBuilder) => TransactionBuilder\n  ) {\n    return condition ? callback(this) : this;\n  }\n\n  unless(\n    condition: boolean,\n    callback: (tx: TransactionBuilder) => TransactionBuilder\n  ) {\n    return this.when(!condition, callback);\n  }\n\n  toTransaction(): Transaction {\n    const tx = new Transaction(this.getTransactionOptions());\n    tx.add(...this.getInstructions());\n    tx.feePayer = this.getFeePayer();\n\n    return tx;\n  }\n}\n"],"names":["TransactionBuilder","constructor","transactionOptions","_defineProperty","undefined","make","prepend","txs","newRecords","flatMap","tx","getInstructionsWithSigners","records","append","add","splitUsingKey","key","include","firstBuilder","secondBuilder","keyPosition","findIndex","record","slice","splitBeforeKey","splitAfterKey","getInstructions","map","instruction","getSigners","feePayer","signers","setTransactionOptions","getTransactionOptions","setFeePayer","getFeePayer","publicKey","when","condition","callback","unless","toTransaction","Transaction"],"mappings":"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"}