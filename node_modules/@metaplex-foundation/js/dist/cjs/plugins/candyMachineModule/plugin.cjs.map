{"version":3,"file":"plugin.cjs","sources":["../../../../src/plugins/candyMachineModule/plugin.ts"],"sourcesContent":["import type { Metaplex } from '@/Metaplex';\nimport { MetaplexPlugin } from '@/types';\nimport { CandyMachineClient } from './CandyMachineClient';\nimport {\n  addConfigLinesOperation,\n  addConfigLinesOperationHandler,\n} from './addConfigLines';\nimport {\n  createCandyMachineOperation,\n  createCandyMachineOperationHandler,\n} from './createCandyMachine';\nimport {\n  findCandyMachineByAdddressOperation,\n  findCandyMachineByAdddressOperationHandler,\n} from './findCandyMachineByAddress';\nimport {\n  findCandyMachinesByPublicKeyFieldOperation,\n  findCandyMachinesByPublicKeyFieldOnChainOperationHandler,\n} from './findCandyMachinesByPublicKeyField';\nimport {\n  updateAuthorityOperation,\n  updateAuthorityOperationHandler,\n} from './updateAuthority';\nimport {\n  updateCandyMachineOperation,\n  updateCandyMachineOperationHandler,\n} from './updateCandyMachine';\n\nexport const candyMachineModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    const op = metaplex.operations();\n    op.register(\n      createCandyMachineOperation,\n      createCandyMachineOperationHandler\n    );\n    op.register(\n      findCandyMachineByAdddressOperation,\n      findCandyMachineByAdddressOperationHandler\n    );\n    op.register(\n      findCandyMachinesByPublicKeyFieldOperation,\n      findCandyMachinesByPublicKeyFieldOnChainOperationHandler\n    );\n    op.register(\n      updateCandyMachineOperation,\n      updateCandyMachineOperationHandler\n    );\n    op.register(updateAuthorityOperation, updateAuthorityOperationHandler);\n    op.register(addConfigLinesOperation, addConfigLinesOperationHandler);\n\n    metaplex.candyMachines = function () {\n      return new CandyMachineClient(this);\n    };\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    candyMachines(): CandyMachineClient;\n  }\n}\n"],"names":["candyMachineModule","install","metaplex","op","operations","register","createCandyMachineOperation","createCandyMachineOperationHandler","findCandyMachineByAdddressOperation","findCandyMachineByAdddressOperationHandler","findCandyMachinesByPublicKeyFieldOperation","findCandyMachinesByPublicKeyFieldOnChainOperationHandler","updateCandyMachineOperation","updateCandyMachineOperationHandler","updateAuthorityOperation","updateAuthorityOperationHandler","addConfigLinesOperation","addConfigLinesOperationHandler","candyMachines","CandyMachineClient"],"mappings":";;;;;;;;;;;;AA4BO,MAAMA,kBAAkB,GAAG,OAAuB;EACvDC,OAAO,CAACC,QAAD,EAAqB;AAC1B,IAAA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX,CAAA;AACAD,IAAAA,EAAE,CAACE,QAAH,CACEC,8CADF,EAEEC,qDAFF,CAAA,CAAA;AAIAJ,IAAAA,EAAE,CAACE,QAAH,CACEG,6DADF,EAEEC,oEAFF,CAAA,CAAA;AAIAN,IAAAA,EAAE,CAACE,QAAH,CACEK,4EADF,EAEEC,0FAFF,CAAA,CAAA;AAIAR,IAAAA,EAAE,CAACE,QAAH,CACEO,8CADF,EAEEC,qDAFF,CAAA,CAAA;AAIAV,IAAAA,EAAE,CAACE,QAAH,CAAYS,wCAAZ,EAAsCC,+CAAtC,CAAA,CAAA;AACAZ,IAAAA,EAAE,CAACE,QAAH,CAAYW,sCAAZ,EAAqCC,6CAArC,CAAA,CAAA;;IAEAf,QAAQ,CAACgB,aAAT,GAAyB,YAAY;AACnC,MAAA,OAAO,IAAIC,qCAAJ,CAAuB,IAAvB,CAAP,CAAA;KADF,CAAA;AAGD,GAAA;;AAzBsD,CAAvB;;;;"}