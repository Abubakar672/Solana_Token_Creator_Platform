{"version":3,"file":"updateAuthority.cjs","sources":["../../../../src/plugins/candyMachineModule/updateAuthority.ts"],"sourcesContent":["import { Operation, OperationHandler, Signer, useOperation } from '@/types';\nimport { Metaplex } from '@/Metaplex';\nimport { createUpdateAuthorityInstructionWithSigners } from '@/programs';\nimport {\n  ConfirmOptions,\n  PublicKey,\n  RpcResponseAndContext,\n  SignatureResult,\n} from '@solana/web3.js';\nimport { TransactionBuilder } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\nconst Key = 'UpdateAuthorityOperation' as const;\nexport const updateAuthorityOperation =\n  useOperation<UpdateAuthorityOperation>(Key);\n\nexport type UpdateAuthorityOperation = Operation<\n  typeof Key,\n  UpdateAuthorityInput,\n  UpdateAuthorityOutput\n>;\n\nexport type UpdateAuthorityInput = {\n  // Accounts\n  candyMachineAddress: PublicKey;\n  walletAddress: PublicKey;\n  authoritySigner: Signer;\n\n  // Args\n  newAuthorityAddress: PublicKey;\n\n  // Transaction Options.\n  confirmOptions?: ConfirmOptions;\n};\nexport type UpdateAuthorityOutput = {\n  // Transaction Result.\n  transactionId: string;\n  confirmResponse: RpcResponseAndContext<SignatureResult>;\n};\n\n// -----------------\n// Handler\n// -----------------\nexport const updateAuthorityOperationHandler: OperationHandler<UpdateAuthorityOperation> =\n  {\n    async handle(\n      operation: UpdateAuthorityOperation,\n      metaplex: Metaplex\n    ): Promise<UpdateAuthorityOutput> {\n      const {\n        candyMachineAddress,\n        walletAddress,\n        authoritySigner,\n        confirmOptions,\n        newAuthorityAddress,\n      } = operation.input;\n\n      const { signature, confirmResponse } = await metaplex\n        .rpc()\n        .sendAndConfirmTransaction(\n          TransactionBuilder.make().add(\n            createUpdateAuthorityInstructionWithSigners({\n              candyMachine: candyMachineAddress,\n              wallet: walletAddress,\n              authority: authoritySigner,\n              newAuthority: newAuthorityAddress,\n            })\n          ),\n          undefined,\n          confirmOptions\n        );\n\n      return {\n        transactionId: signature,\n        confirmResponse,\n      };\n    },\n  };\n"],"names":["Key","updateAuthorityOperation","useOperation","updateAuthorityOperationHandler","handle","operation","metaplex","candyMachineAddress","walletAddress","authoritySigner","confirmOptions","newAuthorityAddress","input","signature","confirmResponse","rpc","sendAndConfirmTransaction","TransactionBuilder","make","add","createUpdateAuthorityInstructionWithSigners","candyMachine","wallet","authority","newAuthority","undefined","transactionId"],"mappings":";;;;;;;;AAYA;AACA;;AACA,MAAMA,GAAG,GAAG,0BAAZ,CAAA;MACaC,wBAAwB,GACnCC,sBAAY,CAA2BF,GAA3B,EADP;AA2BP;AACA;AACA;AACO,MAAMG,+BAA2E,GACtF;AACE,EAAA,MAAMC,MAAN,CACEC,SADF,EAEEC,QAFF,EAGkC;IAChC,MAAM;MACJC,mBADI;MAEJC,aAFI;MAGJC,eAHI;MAIJC,cAJI;AAKJC,MAAAA,mBAAAA;KACEN,GAAAA,SAAS,CAACO,KANd,CAAA;IAQA,MAAM;MAAEC,SAAF;AAAaC,MAAAA,eAAAA;AAAb,KAAA,GAAiC,MAAMR,QAAQ,CAClDS,GAD0C,GAE1CC,yBAF0C,CAGzCC,qCAAkB,CAACC,IAAnB,EAAA,CAA0BC,GAA1B,CACEC,uFAA2C,CAAC;AAC1CC,MAAAA,YAAY,EAAEd,mBAD4B;AAE1Ce,MAAAA,MAAM,EAAEd,aAFkC;AAG1Ce,MAAAA,SAAS,EAAEd,eAH+B;AAI1Ce,MAAAA,YAAY,EAAEb,mBAAAA;AAJ4B,KAAD,CAD7C,CAHyC,EAWzCc,SAXyC,EAYzCf,cAZyC,CAA7C,CAAA;IAeA,OAAO;AACLgB,MAAAA,aAAa,EAAEb,SADV;AAELC,MAAAA,eAAAA;KAFF,CAAA;AAID,GAAA;;AAhCH;;;;;"}