{"version":3,"file":"addConfigLines.cjs","sources":["../../../../src/plugins/candyMachineModule/addConfigLines.ts"],"sourcesContent":["import { Operation, OperationHandler, Signer, useOperation } from '@/types';\nimport { Metaplex } from '@/Metaplex';\nimport { createAddConfigLinesInstructionWithSigners } from '@/programs';\nimport {\n  ConfirmOptions,\n  PublicKey,\n  RpcResponseAndContext,\n  SignatureResult,\n} from '@solana/web3.js';\nimport { ConfigLine } from '@metaplex-foundation/mpl-candy-machine';\nimport { TransactionBuilder } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\nconst Key = 'AddConfigLinesOperation' as const;\nexport const addConfigLinesOperation =\n  useOperation<AddConfigLinesOperation>(Key);\n\nexport type AddConfigLinesOperation = Operation<\n  typeof Key,\n  AddConfigLinesInput,\n  AddConfigLinesOutput\n>;\n\nexport type AddConfigLinesInput = {\n  // Accounts\n  candyMachineAddress: PublicKey;\n  authoritySigner: Signer;\n\n  // Args\n  index: number;\n  configLines: ConfigLine[];\n\n  // Transaction Options.\n  confirmOptions?: ConfirmOptions;\n};\nexport type AddConfigLinesOutput = {\n  // Transaction Result.\n  transactionId: string;\n  confirmResponse: RpcResponseAndContext<SignatureResult>;\n};\n\n// -----------------\n// Handler\n// -----------------\nexport const addConfigLinesOperationHandler: OperationHandler<AddConfigLinesOperation> =\n  {\n    async handle(\n      operation: AddConfigLinesOperation,\n      metaplex: Metaplex\n    ): Promise<AddConfigLinesOutput> {\n      const {\n        candyMachineAddress,\n        authoritySigner,\n        index,\n        configLines,\n        confirmOptions,\n      } = operation.input;\n\n      const { signature, confirmResponse } = await metaplex\n        .rpc()\n        .sendAndConfirmTransaction(\n          TransactionBuilder.make().add(\n            createAddConfigLinesInstructionWithSigners({\n              candyMachine: candyMachineAddress,\n              authority: authoritySigner,\n              index,\n              configLines,\n            })\n          ),\n          undefined,\n          confirmOptions\n        );\n\n      return {\n        transactionId: signature,\n        confirmResponse,\n      };\n    },\n  };\n"],"names":["Key","addConfigLinesOperation","useOperation","addConfigLinesOperationHandler","handle","operation","metaplex","candyMachineAddress","authoritySigner","index","configLines","confirmOptions","input","signature","confirmResponse","rpc","sendAndConfirmTransaction","TransactionBuilder","make","add","createAddConfigLinesInstructionWithSigners","candyMachine","authority","undefined","transactionId"],"mappings":";;;;;;;;AAaA;AACA;;AACA,MAAMA,GAAG,GAAG,yBAAZ,CAAA;MACaC,uBAAuB,GAClCC,sBAAY,CAA0BF,GAA1B,EADP;AA2BP;AACA;AACA;AACO,MAAMG,8BAAyE,GACpF;AACE,EAAA,MAAMC,MAAN,CACEC,SADF,EAEEC,QAFF,EAGiC;IAC/B,MAAM;MACJC,mBADI;MAEJC,eAFI;MAGJC,KAHI;MAIJC,WAJI;AAKJC,MAAAA,cAAAA;KACEN,GAAAA,SAAS,CAACO,KANd,CAAA;IAQA,MAAM;MAAEC,SAAF;AAAaC,MAAAA,eAAAA;AAAb,KAAA,GAAiC,MAAMR,QAAQ,CAClDS,GAD0C,GAE1CC,yBAF0C,CAGzCC,qCAAkB,CAACC,IAAnB,EAAA,CAA0BC,GAA1B,CACEC,qFAA0C,CAAC;AACzCC,MAAAA,YAAY,EAAEd,mBAD2B;AAEzCe,MAAAA,SAAS,EAAEd,eAF8B;MAGzCC,KAHyC;AAIzCC,MAAAA,WAAAA;AAJyC,KAAD,CAD5C,CAHyC,EAWzCa,SAXyC,EAYzCZ,cAZyC,CAA7C,CAAA;IAeA,OAAO;AACLa,MAAAA,aAAa,EAAEX,SADV;AAELC,MAAAA,eAAAA;KAFF,CAAA;AAID,GAAA;;AAhCH;;;;;"}