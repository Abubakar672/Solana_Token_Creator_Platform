{"version":3,"file":"NftClient.cjs","sources":["../../../../src/plugins/nftModule/NftClient.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { Nft } from './Nft';\nimport { findNftByMintOperation } from './findNftByMint';\nimport { findNftsByMintListOperation } from './findNftsByMintList';\nimport { findNftsByOwnerOperation } from './findNftsByOwner';\nimport { findNftsByCreatorOperation } from './findNftsByCreator';\nimport { findNftsByCandyMachineOperation } from './findNftsByCandyMachine';\nimport {\n  UploadMetadataInput,\n  uploadMetadataOperation,\n  UploadMetadataOutput,\n} from './uploadMetadata';\nimport {\n  CreateNftInput,\n  createNftOperation,\n  CreateNftOutput,\n} from './createNft';\nimport {\n  UpdateNftInput,\n  updateNftOperation,\n  UpdateNftOutput,\n} from './updateNft';\nimport {\n  printNewEditionOperation,\n  PrintNewEditionOutput,\n  PrintNewEditionSharedInput,\n  PrintNewEditionViaInput,\n} from './printNewEdition';\n\nexport class NftClient {\n  constructor(protected readonly metaplex: Metaplex) {}\n\n  findByMint(mint: PublicKey): Promise<Nft> {\n    return this.metaplex.operations().execute(findNftByMintOperation(mint));\n  }\n\n  findAllByMintList(mints: PublicKey[]): Promise<(Nft | null)[]> {\n    return this.metaplex\n      .operations()\n      .execute(findNftsByMintListOperation(mints));\n  }\n\n  findAllByOwner(owner: PublicKey): Promise<Nft[]> {\n    return this.metaplex.operations().execute(findNftsByOwnerOperation(owner));\n  }\n\n  findAllByCreator(creator: PublicKey, position: number = 1): Promise<Nft[]> {\n    return this.metaplex\n      .operations()\n      .execute(findNftsByCreatorOperation({ creator, position }));\n  }\n\n  findAllByCandyMachine(\n    candyMachine: PublicKey,\n    version?: 1 | 2\n  ): Promise<Nft[]> {\n    return this.metaplex\n      .operations()\n      .execute(findNftsByCandyMachineOperation({ candyMachine, version }));\n  }\n\n  uploadMetadata(input: UploadMetadataInput): Promise<UploadMetadataOutput> {\n    return this.metaplex.operations().execute(uploadMetadataOperation(input));\n  }\n\n  async create(input: CreateNftInput): Promise<{ nft: Nft } & CreateNftOutput> {\n    const operation = createNftOperation(input);\n    const createNftOutput = await this.metaplex.operations().execute(operation);\n    const nft = await this.findByMint(createNftOutput.mint.publicKey);\n\n    return { ...createNftOutput, nft };\n  }\n\n  async update(\n    nft: Nft,\n    input: Omit<UpdateNftInput, 'nft'>\n  ): Promise<{ nft: Nft } & UpdateNftOutput> {\n    const operation = updateNftOperation({ ...input, nft });\n    const updateNftOutput = await this.metaplex.operations().execute(operation);\n    const updatedNft = await this.findByMint(nft.mint);\n\n    return { ...updateNftOutput, nft: updatedNft };\n  }\n\n  async printNewEdition(\n    originalMint: PublicKey,\n    input: Omit<PrintNewEditionSharedInput, 'originalMint'> &\n      PrintNewEditionViaInput = {}\n  ): Promise<{ nft: Nft } & PrintNewEditionOutput> {\n    const operation = printNewEditionOperation({ originalMint, ...input });\n    const printNewEditionOutput = await this.metaplex\n      .operations()\n      .execute(operation);\n    const nft = await this.findByMint(printNewEditionOutput.mint.publicKey);\n\n    return { ...printNewEditionOutput, nft };\n  }\n}\n"],"names":["NftClient","constructor","metaplex","findByMint","mint","operations","execute","findNftByMintOperation","findAllByMintList","mints","findNftsByMintListOperation","findAllByOwner","owner","findNftsByOwnerOperation","findAllByCreator","creator","position","findNftsByCreatorOperation","findAllByCandyMachine","candyMachine","version","findNftsByCandyMachineOperation","uploadMetadata","input","uploadMetadataOperation","create","operation","createNftOperation","createNftOutput","nft","publicKey","update","updateNftOperation","updateNftOutput","updatedNft","printNewEdition","originalMint","printNewEditionOperation","printNewEditionOutput"],"mappings":"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"}