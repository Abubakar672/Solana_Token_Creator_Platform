{"version":3,"file":"findNftByMint.cjs","sources":["../../../../src/plugins/nftModule/findNftByMint.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport {\n  parseMetadataAccount,\n  parseOriginalOrPrintEditionAccount,\n  findMasterEditionV2Pda,\n  findMetadataPda,\n} from '@/programs';\nimport { Operation, useOperation, OperationHandler } from '@/types';\nimport { NftNotFoundError } from '@/errors';\nimport { Nft } from './Nft';\n\nconst Key = 'FindNftByMintOperation' as const;\nexport const findNftByMintOperation = useOperation<FindNftByMintOperation>(Key);\nexport type FindNftByMintOperation = Operation<typeof Key, PublicKey, Nft>;\n\nexport const findNftByMintOnChainOperationHandler: OperationHandler<FindNftByMintOperation> =\n  {\n    handle: async (\n      operation: FindNftByMintOperation,\n      metaplex: Metaplex\n    ): Promise<Nft> => {\n      const mint = operation.input;\n      const [metadata, edition] = await metaplex\n        .rpc()\n        .getMultipleAccounts([\n          findMetadataPda(mint),\n          findMasterEditionV2Pda(mint),\n        ]);\n\n      const metadataAccount = parseMetadataAccount(metadata);\n      const editionAccount = parseOriginalOrPrintEditionAccount(edition);\n\n      if (!metadataAccount.exists) {\n        throw new NftNotFoundError(mint);\n      }\n\n      const nft = new Nft(metadataAccount, metaplex);\n\n      try {\n        await nft.metadataTask.run();\n      } catch (e) {\n        // Fail silently...\n      }\n\n      nft.editionTask.loadWith(editionAccount.exists ? editionAccount : null);\n\n      return nft;\n    },\n  };\n"],"names":["Key","findNftByMintOperation","useOperation","findNftByMintOnChainOperationHandler","handle","operation","metaplex","mint","input","metadata","edition","rpc","getMultipleAccounts","findMetadataPda","findMasterEditionV2Pda","metadataAccount","parseMetadataAccount","editionAccount","parseOriginalOrPrintEditionAccount","exists","NftNotFoundError","nft","Nft","metadataTask","run","e","editionTask","loadWith"],"mappings":";;;;;;;;;;;;AAYA,MAAMA,GAAG,GAAG,wBAAZ,CAAA;MACaC,sBAAsB,GAAGC,sBAAY,CAAyBF,GAAzB,EAA3C;AAGA,MAAMG,oCAA8E,GACzF;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,KAGW;AACjB,IAAA,MAAMC,IAAI,GAAGF,SAAS,CAACG,KAAvB,CAAA;IACA,MAAM,CAACC,QAAD,EAAWC,OAAX,IAAsB,MAAMJ,QAAQ,CACvCK,GAD+B,EAE/BC,CAAAA,mBAF+B,CAEX,CACnBC,+BAAe,CAACN,IAAD,CADI,EAEnBO,6CAAsB,CAACP,IAAD,CAFH,CAFW,CAAlC,CAAA;AAOA,IAAA,MAAMQ,eAAe,GAAGC,oCAAoB,CAACP,QAAD,CAA5C,CAAA;AACA,IAAA,MAAMQ,cAAc,GAAGC,kDAAkC,CAACR,OAAD,CAAzD,CAAA;;AAEA,IAAA,IAAI,CAACK,eAAe,CAACI,MAArB,EAA6B;AAC3B,MAAA,MAAM,IAAIC,yBAAJ,CAAqBb,IAArB,CAAN,CAAA;AACD,KAAA;;IAED,MAAMc,GAAG,GAAG,IAAIC,OAAJ,CAAQP,eAAR,EAAyBT,QAAzB,CAAZ,CAAA;;IAEA,IAAI;AACF,MAAA,MAAMe,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,EAAN,CAAA;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AAEX,KAAA;;IAEDJ,GAAG,CAACK,WAAJ,CAAgBC,QAAhB,CAAyBV,cAAc,CAACE,MAAf,GAAwBF,cAAxB,GAAyC,IAAlE,CAAA,CAAA;AAEA,IAAA,OAAOI,GAAP,CAAA;AACD,GAAA;AA/BH;;;;;"}