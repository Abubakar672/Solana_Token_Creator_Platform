{"version":3,"file":"Nft.cjs","sources":["../../../../src/plugins/nftModule/Nft.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport {\n  TokenStandard,\n  Collection,\n  Uses,\n  Creator,\n  MasterEditionV2Args,\n  EditionArgs,\n} from '@metaplex-foundation/mpl-token-metadata';\nimport { Metaplex } from '@/Metaplex';\nimport {\n  isOriginalEditionAccount,\n  isPrintEditionAccount,\n  MetadataAccount,\n  OriginalEditionAccount,\n  OriginalOrPrintEditionAccount,\n  PrintEditionAccount,\n} from '@/programs';\nimport { Model } from '@/types';\nimport { removeEmptyChars } from '@/utils';\nimport { JsonMetadata } from './JsonMetadata';\nimport { useJsonMetadataTask, JsonMetadataTask } from './useJsonMetadataTask';\nimport { useEditionTask, EditionTask } from './useEditionTask';\n\nexport class Nft extends Model {\n  /** The Metadata PDA account defining the NFT. */\n  public readonly metadataAccount: MetadataAccount;\n\n  /** Tasks. */\n  public readonly metadataTask: JsonMetadataTask;\n  public readonly editionTask: EditionTask;\n\n  /** Data from the Metadata account. */\n  public readonly updateAuthority: PublicKey;\n  public readonly mint: PublicKey;\n  public readonly name: string;\n  public readonly symbol: string;\n  public readonly uri: string;\n  public readonly sellerFeeBasisPoints: number;\n  public readonly creators: Creator[] | null;\n  public readonly primarySaleHappened: boolean;\n  public readonly isMutable: boolean;\n  public readonly editionNonce: number | null;\n  public readonly tokenStandard: TokenStandard | null;\n  public readonly collection: Collection | null;\n  public readonly uses: Uses | null;\n\n  constructor(metadataAccount: MetadataAccount, metaplex: Metaplex) {\n    super();\n    this.metadataAccount = metadataAccount;\n    this.metadataTask = useJsonMetadataTask(metaplex, this);\n    this.editionTask = useEditionTask(metaplex, this);\n\n    this.updateAuthority = metadataAccount.data.updateAuthority;\n    this.mint = metadataAccount.data.mint;\n    this.name = removeEmptyChars(metadataAccount.data.data.name);\n    this.symbol = removeEmptyChars(metadataAccount.data.data.symbol);\n    this.uri = removeEmptyChars(metadataAccount.data.data.uri);\n    this.sellerFeeBasisPoints = metadataAccount.data.data.sellerFeeBasisPoints;\n    this.creators = metadataAccount.data.data.creators;\n    this.primarySaleHappened = metadataAccount.data.primarySaleHappened;\n    this.isMutable = metadataAccount.data.isMutable;\n    this.editionNonce = metadataAccount.data.editionNonce;\n    this.tokenStandard = metadataAccount.data.tokenStandard;\n    this.collection = metadataAccount.data.collection;\n    this.uses = metadataAccount.data.uses;\n  }\n\n  get metadata(): JsonMetadata {\n    return this.metadataTask.getResult() ?? {};\n  }\n\n  get editionAccount(): OriginalOrPrintEditionAccount | null {\n    return this.editionTask.getResult() ?? null;\n  }\n\n  get originalEdition(): MasterEditionV2Args | null {\n    if (!this.isOriginal()) {\n      return null;\n    }\n\n    return this.editionAccount.data;\n  }\n\n  get printEdition(): EditionArgs | null {\n    if (!this.isPrint()) {\n      return null;\n    }\n\n    return this.editionAccount.data;\n  }\n\n  public equals(other: Nft | PublicKey): boolean {\n    const mint = other instanceof Nft ? other.mint : other;\n\n    return this.mint.equals(mint);\n  }\n\n  public isOriginal(): this is { editionAccount: OriginalEditionAccount } {\n    return (\n      this.editionAccount != null &&\n      isOriginalEditionAccount(this.editionAccount)\n    );\n  }\n\n  public isPrint(): this is { editionAccount: PrintEditionAccount } {\n    return (\n      this.editionAccount != null && isPrintEditionAccount(this.editionAccount)\n    );\n  }\n}\n"],"names":["Nft","Model","constructor","metadataAccount","metaplex","metadataTask","useJsonMetadataTask","editionTask","useEditionTask","updateAuthority","data","mint","name","removeEmptyChars","symbol","uri","sellerFeeBasisPoints","creators","primarySaleHappened","isMutable","editionNonce","tokenStandard","collection","uses","metadata","getResult","editionAccount","originalEdition","isOriginal","printEdition","isPrint","equals","other","isOriginalEditionAccount","isPrintEditionAccount"],"mappings":"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"}