{"version":3,"file":"createMintNewEditionFromMasterEditionViaTokenInstructionWithSigners.cjs","sources":["../../../../../src/programs/tokenMetadata/instructions/createMintNewEditionFromMasterEditionViaTokenInstructionWithSigners.ts"],"sourcesContent":["import BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { createMintNewEditionFromMasterEditionViaTokenInstruction } from '@metaplex-foundation/mpl-token-metadata';\nimport { Signer } from '@/types';\nimport { InstructionWithSigners } from '@/utils';\n\nexport interface CreateMintNewEditionFromMasterEditionViaTokenInstructionWithSignersParams {\n  edition: number | BN;\n  newMetadata: PublicKey;\n  newEdition: PublicKey;\n  masterEdition: PublicKey;\n  newMint: Signer;\n  editionMarkPda: PublicKey;\n  newMintAuthority: Signer;\n  payer: Signer;\n  tokenAccountOwner: Signer;\n  tokenAccount: PublicKey;\n  newMetadataUpdateAuthority: PublicKey;\n  metadata: PublicKey;\n  instructionKey?: string;\n}\n\nexport const createMintNewEditionFromMasterEditionViaTokenInstructionWithSigners =\n  (\n    params: CreateMintNewEditionFromMasterEditionViaTokenInstructionWithSignersParams\n  ): InstructionWithSigners => {\n    const {\n      edition,\n      newMetadata,\n      newEdition,\n      masterEdition,\n      newMint,\n      editionMarkPda,\n      newMintAuthority,\n      payer,\n      tokenAccountOwner,\n      tokenAccount,\n      newMetadataUpdateAuthority,\n      metadata,\n      instructionKey = 'mintNewEditionFromMasterEditionViaToken',\n    } = params;\n\n    return {\n      instruction: createMintNewEditionFromMasterEditionViaTokenInstruction(\n        {\n          newMetadata,\n          newEdition,\n          masterEdition,\n          newMint: newMint.publicKey,\n          editionMarkPda,\n          newMintAuthority: newMintAuthority.publicKey,\n          payer: payer.publicKey,\n          tokenAccountOwner: tokenAccountOwner.publicKey,\n          tokenAccount,\n          newMetadataUpdateAuthority,\n          metadata,\n        },\n        { mintNewEditionFromMasterEditionViaTokenArgs: { edition } }\n      ),\n      signers: [newMint, newMintAuthority, payer, tokenAccountOwner],\n      key: instructionKey,\n    };\n  };\n"],"names":["createMintNewEditionFromMasterEditionViaTokenInstructionWithSigners","params","edition","newMetadata","newEdition","masterEdition","newMint","editionMarkPda","newMintAuthority","payer","tokenAccountOwner","tokenAccount","newMetadataUpdateAuthority","metadata","instructionKey","instruction","createMintNewEditionFromMasterEditionViaTokenInstruction","publicKey","mintNewEditionFromMasterEditionViaTokenArgs","signers","key"],"mappings":";;;;;;AAsBaA,MAAAA,mEAAmE,GAE5EC,MADF,IAE6B;EAC3B,MAAM;IACJC,OADI;IAEJC,WAFI;IAGJC,UAHI;IAIJC,aAJI;IAKJC,OALI;IAMJC,cANI;IAOJC,gBAPI;IAQJC,KARI;IASJC,iBATI;IAUJC,YAVI;IAWJC,0BAXI;IAYJC,QAZI;AAaJC,IAAAA,cAAc,GAAG,yCAAA;AAbb,GAAA,GAcFb,MAdJ,CAAA;EAgBA,OAAO;IACLc,WAAW,EAAEC,yEAAwD,CACnE;MACEb,WADF;MAEEC,UAFF;MAGEC,aAHF;MAIEC,OAAO,EAAEA,OAAO,CAACW,SAJnB;MAKEV,cALF;MAMEC,gBAAgB,EAAEA,gBAAgB,CAACS,SANrC;MAOER,KAAK,EAAEA,KAAK,CAACQ,SAPf;MAQEP,iBAAiB,EAAEA,iBAAiB,CAACO,SARvC;MASEN,YATF;MAUEC,0BAVF;AAWEC,MAAAA,QAAAA;AAXF,KADmE,EAcnE;AAAEK,MAAAA,2CAA2C,EAAE;AAAEhB,QAAAA,OAAAA;AAAF,OAAA;AAA/C,KAdmE,CADhE;IAiBLiB,OAAO,EAAE,CAACb,OAAD,EAAUE,gBAAV,EAA4BC,KAA5B,EAAmCC,iBAAnC,CAjBJ;AAkBLU,IAAAA,GAAG,EAAEN,cAAAA;GAlBP,CAAA;AAoBD;;;;"}