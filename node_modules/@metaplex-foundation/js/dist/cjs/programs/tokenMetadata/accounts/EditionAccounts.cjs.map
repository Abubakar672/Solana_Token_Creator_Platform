{"version":3,"file":"EditionAccounts.cjs","sources":["../../../../../src/programs/tokenMetadata/accounts/EditionAccounts.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport {\n  Edition,\n  Key,\n  MasterEditionV1,\n  MasterEditionV2,\n} from '@metaplex-foundation/mpl-token-metadata';\nimport { Account, getAccountParsingFunction } from '@/types';\n\nexport type OriginalEditionAccountData = MasterEditionV1 | MasterEditionV2;\nexport type OriginalEditionAccount = Account<OriginalEditionAccountData>;\n\nexport type PrintEditionAccountData = Edition;\nexport type PrintEditionAccount = Account<PrintEditionAccountData>;\n\nexport type OriginalOrPrintEditionAccountData =\n  | OriginalEditionAccountData\n  | PrintEditionAccountData;\nexport type OriginalOrPrintEditionAccount =\n  Account<OriginalOrPrintEditionAccountData>;\n\nexport const parseOriginalOrPrintEditionAccount =\n  getAccountParsingFunction<OriginalOrPrintEditionAccountData>({\n    name: 'MasterEditionV1 | MasterEditionV2 | Edition',\n    deserialize: (data: Buffer, offset = 0) => {\n      if (data?.[0] === Key.MasterEditionV1) {\n        return MasterEditionV1.deserialize(data, offset);\n      } else if (data?.[0] === Key.MasterEditionV2) {\n        return MasterEditionV2.deserialize(data, offset);\n      } else {\n        return Edition.deserialize(data, offset);\n      }\n    },\n  });\n\nexport const parseOriginalEditionAccount =\n  getAccountParsingFunction<OriginalEditionAccountData>({\n    name: 'MasterEditionV1 | MasterEditionV2',\n    deserialize: (data: Buffer, offset = 0) => {\n      if (data?.[0] === Key.MasterEditionV1) {\n        return MasterEditionV1.deserialize(data, offset);\n      } else {\n        return MasterEditionV2.deserialize(data, offset);\n      }\n    },\n  });\n\nexport const parsePrintEditionAccount = getAccountParsingFunction(Edition);\n\nexport const isOriginalEditionAccount = (\n  account: OriginalOrPrintEditionAccount\n): account is OriginalEditionAccount => {\n  return 'maxSupply' in account.data;\n};\n\nexport const isPrintEditionAccount = (\n  account: OriginalOrPrintEditionAccount\n): account is PrintEditionAccount => {\n  return !isOriginalEditionAccount(account);\n};\n"],"names":["parseOriginalOrPrintEditionAccount","getAccountParsingFunction","name","deserialize","data","offset","Key","MasterEditionV1","MasterEditionV2","Edition","parseOriginalEditionAccount","parsePrintEditionAccount","isOriginalEditionAccount","account","isPrintEditionAccount"],"mappings":";;;;;;;AAqBaA,MAAAA,kCAAkC,GAC7CC,iCAAyB,CAAoC;AAC3DC,EAAAA,IAAI,EAAE,6CADqD;AAE3DC,EAAAA,WAAW,EAAE,CAACC,IAAD,EAAeC,MAAM,GAAG,CAAxB,KAA8B;AACzC,IAAA,IAAI,CAAAD,IAAI,KAAJ,IAAA,IAAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAI,CAAG,CAAH,CAAJ,MAAcE,oBAAG,CAACC,eAAtB,EAAuC;AACrC,MAAA,OAAOA,gCAAe,CAACJ,WAAhB,CAA4BC,IAA5B,EAAkCC,MAAlC,CAAP,CAAA;AACD,KAFD,MAEO,IAAI,CAAAD,IAAI,KAAA,IAAJ,IAAAA,IAAI,KAAA,KAAA,CAAJ,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAG,CAAH,CAAJ,MAAcE,oBAAG,CAACE,eAAtB,EAAuC;AAC5C,MAAA,OAAOA,gCAAe,CAACL,WAAhB,CAA4BC,IAA5B,EAAkCC,MAAlC,CAAP,CAAA;AACD,KAFM,MAEA;AACL,MAAA,OAAOI,wBAAO,CAACN,WAAR,CAAoBC,IAApB,EAA0BC,MAA1B,CAAP,CAAA;AACD,KAAA;AACF,GAAA;AAV0D,CAApC,EADpB;AAcMK,MAAAA,2BAA2B,GACtCT,iCAAyB,CAA6B;AACpDC,EAAAA,IAAI,EAAE,mCAD8C;AAEpDC,EAAAA,WAAW,EAAE,CAACC,IAAD,EAAeC,MAAM,GAAG,CAAxB,KAA8B;AACzC,IAAA,IAAI,CAAAD,IAAI,KAAJ,IAAA,IAAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAI,CAAG,CAAH,CAAJ,MAAcE,oBAAG,CAACC,eAAtB,EAAuC;AACrC,MAAA,OAAOA,gCAAe,CAACJ,WAAhB,CAA4BC,IAA5B,EAAkCC,MAAlC,CAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,OAAOG,gCAAe,CAACL,WAAhB,CAA4BC,IAA5B,EAAkCC,MAAlC,CAAP,CAAA;AACD,KAAA;AACF,GAAA;AARmD,CAA7B,EADpB;MAYMM,wBAAwB,GAAGV,iCAAyB,CAACQ,wBAAD,EAA1D;AAEMG,MAAAA,wBAAwB,GACnCC,OADsC,IAEA;EACtC,OAAO,WAAA,IAAeA,OAAO,CAACT,IAA9B,CAAA;AACD,EAJM;AAMMU,MAAAA,qBAAqB,GAChCD,OADmC,IAEA;AACnC,EAAA,OAAO,CAACD,wBAAwB,CAACC,OAAD,CAAhC,CAAA;AACD;;;;;;;;"}