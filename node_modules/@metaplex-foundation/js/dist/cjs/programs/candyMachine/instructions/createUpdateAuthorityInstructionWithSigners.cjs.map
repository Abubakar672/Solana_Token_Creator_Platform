{"version":3,"file":"createUpdateAuthorityInstructionWithSigners.cjs","sources":["../../../../../src/programs/candyMachine/instructions/createUpdateAuthorityInstructionWithSigners.ts"],"sourcesContent":["import { createUpdateAuthorityInstruction } from '@metaplex-foundation/mpl-candy-machine';\nimport { Signer } from '@/types';\nimport { InstructionWithSigners } from '@/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport type CreateUpdateAuthorityInstructionWithSignersParams = {\n  // Accounts\n  candyMachine: PublicKey;\n  authority: Signer;\n  wallet: PublicKey;\n\n  // Instruction Args\n  newAuthority: PublicKey;\n\n  instructionKey?: string;\n};\n\nexport function createUpdateAuthorityInstructionWithSigners(\n  params: CreateUpdateAuthorityInstructionWithSignersParams\n): InstructionWithSigners {\n  const {\n    candyMachine,\n    authority,\n    wallet,\n    newAuthority,\n    instructionKey = 'updateCandyMachineAuthority',\n  } = params;\n\n  return {\n    instruction: createUpdateAuthorityInstruction(\n      {\n        candyMachine,\n        authority: authority.publicKey,\n        wallet,\n      },\n      { newAuthority }\n    ),\n    signers: [authority],\n    key: instructionKey,\n  };\n}\n"],"names":["createUpdateAuthorityInstructionWithSigners","params","candyMachine","authority","wallet","newAuthority","instructionKey","instruction","createUpdateAuthorityInstruction","publicKey","signers","key"],"mappings":";;;;;;AAiBO,SAASA,2CAAT,CACLC,MADK,EAEmB;EACxB,MAAM;IACJC,YADI;IAEJC,SAFI;IAGJC,MAHI;IAIJC,YAJI;AAKJC,IAAAA,cAAc,GAAG,6BAAA;AALb,GAAA,GAMFL,MANJ,CAAA;EAQA,OAAO;IACLM,WAAW,EAAEC,gDAAgC,CAC3C;MACEN,YADF;MAEEC,SAAS,EAAEA,SAAS,CAACM,SAFvB;AAGEL,MAAAA,MAAAA;AAHF,KAD2C,EAM3C;AAAEC,MAAAA,YAAAA;AAAF,KAN2C,CADxC;IASLK,OAAO,EAAE,CAACP,SAAD,CATJ;AAULQ,IAAAA,GAAG,EAAEL,cAAAA;GAVP,CAAA;AAYD;;;;"}