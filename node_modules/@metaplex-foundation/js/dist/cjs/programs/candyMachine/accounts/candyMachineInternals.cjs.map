{"version":3,"file":"candyMachineInternals.cjs","sources":["../../../../../src/programs/candyMachine/accounts/candyMachineInternals.ts"],"sourcesContent":["import {\n  CandyMachineData,\n  ConfigLine,\n  configLineBeet,\n  Creator,\n} from '@metaplex-foundation/mpl-candy-machine';\nimport BN from 'bn.js';\nimport { assert } from '@/utils';\n\n// NOTE: The below is adapted from the Rust program, thus duplicating business\n// logic which isn't ideal\nconst MAX_NAME_LENGTH = 32;\nconst MAX_SYMBOL_LENGTH = 10;\nconst MAX_URI_LENGTH = 200;\nconst MAX_CREATOR_LIMIT = 5;\nconst MAX_CREATOR_LEN = 32 + 1 + 1;\n\n// prettier-ignore\nconst CONFIG_ARRAY_START =\n  8  +                                      // key\n  32 +                                      // authority\n  32 +                                      // wallet\n  33 +                                      // token mint\n  4  + 6  +                                 // uuid\n  8  +                                      // price\n  8  +                                      // items available\n  9  +                                      // go live\n  10 +                                      // end settings\n  4  + MAX_SYMBOL_LENGTH +                  // u32 len + symbol\n  2 +                                       // seller fee basis points\n  4 + MAX_CREATOR_LIMIT * MAX_CREATOR_LEN + // optional + u32 len + actual vec\n  8 +                                       // max supply\n  1 +                                       // is mutable\n  1 +                                       // retain authority\n  1 +                                       // option for hidden setting\n  4 + MAX_NAME_LENGTH +                     // name length,\n  4 + MAX_URI_LENGTH +                      // uri length,\n  32 +                                      // hash\n  4  +                                      // max number of lines;\n  8  +                                      // items redeemed\n  1  +                                      // whitelist option\n  1  +                                      // whitelist mint mode\n  1  +                                      // allow presale\n  9  +                                      // discount price\n  32 +                                      // mint key for whitelist\n  1  + 32 + 1 // gatekeeper\n\nconst CONFIG_LINE_SIZE = 4 + MAX_NAME_LENGTH + 4 + MAX_URI_LENGTH;\n\n// https://github.com/metaplex-foundation/metaplex-program-library/blob/2c426e85393311c6ba62dd9fb1333d15cc35659a/candy-machine/program/src/lib.rs#L856\nexport function getSpaceForCandy(data: CandyMachineData) {\n  if (data.hiddenSettings != null) {\n    // TODO(thlorenz): this seems to be a bug copied from the Rust program code\n    // the actual size of hidden settings struct is not factored in here\n    return CONFIG_ARRAY_START;\n  } else {\n    const itemsAvailable = new BN(data.itemsAvailable).toNumber();\n    // prettier-ignore\n    return Math.ceil(\n      CONFIG_ARRAY_START +\n      4 +\n      itemsAvailable * CONFIG_LINE_SIZE +\n      8 +\n      2 * (itemsAvailable / 8 + 1)\n    );\n  }\n}\n\n// https://github.com/metaplex-foundation/metaplex-program-library/blob/681f22d7cff37149ac70a374990587a189ebc6c2/candy-machine/program/src/lib.rs#L1321-L1323\nexport function getConfigLinesCount(rawData: Buffer) {\n  return rawData\n    .slice(CONFIG_ARRAY_START, CONFIG_ARRAY_START + 4)\n    .readUInt32LE();\n}\n\nexport function getConfigLines(rawData: Buffer): ConfigLine[] {\n  const configLinesStart = CONFIG_ARRAY_START + 4;\n  const lines = [];\n  const count = getConfigLinesCount(rawData);\n  for (let i = 0; i < count; i++) {\n    const [line] = configLineBeet.deserialize(\n      rawData,\n      configLinesStart + i * CONFIG_LINE_SIZE\n    );\n    lines.push(line);\n  }\n  return lines;\n}\n\nexport function assertName(name: string) {\n  assert(\n    name.length <= MAX_NAME_LENGTH,\n    `Candy Machine name too long: ${name} (max ${MAX_NAME_LENGTH})`\n  );\n}\n\nexport function assertSymbol(symbol: string) {\n  assert(\n    symbol.length <= MAX_SYMBOL_LENGTH,\n    `Candy Machine symbol too long: ${symbol} (max ${MAX_SYMBOL_LENGTH})`\n  );\n}\n\nexport function assertUri(uri: string) {\n  assert(\n    uri.length <= MAX_URI_LENGTH,\n    `Candy Machine URI too long: ${uri} (max ${MAX_URI_LENGTH})`\n  );\n}\n\nexport function assertCreators(creators: Creator[]) {\n  assert(\n    creators.length <= MAX_CREATOR_LIMIT,\n    `Candy Machine creators too long: ${creators} (max ${MAX_CREATOR_LIMIT})`\n  );\n}\n\nexport function assertConfigLineConstraints({\n  name,\n  uri,\n}: {\n  name: string;\n  uri: string;\n}) {\n  assertName(name);\n  assertUri(uri);\n}\n"],"names":["MAX_NAME_LENGTH","MAX_SYMBOL_LENGTH","MAX_URI_LENGTH","MAX_CREATOR_LIMIT","MAX_CREATOR_LEN","CONFIG_ARRAY_START","CONFIG_LINE_SIZE","getSpaceForCandy","data","hiddenSettings","itemsAvailable","BN","toNumber","Math","ceil","getConfigLinesCount","rawData","slice","readUInt32LE","getConfigLines","configLinesStart","lines","count","i","line","configLineBeet","deserialize","push","assertName","name","assert","length","assertUri","uri","assertConfigLineConstraints"],"mappings":";;;;;;;;;;;;AAUA;;AACA,MAAMA,eAAe,GAAG,EAAxB,CAAA;AACA,MAAMC,iBAAiB,GAAG,EAA1B,CAAA;AACA,MAAMC,cAAc,GAAG,GAAvB,CAAA;AACA,MAAMC,iBAAiB,GAAG,CAA1B,CAAA;AACA,MAAMC,eAAe,GAAG,EAAA,GAAK,CAAL,GAAS,CAAjC;;AAGA,MAAMC,kBAAkB,GACtB,CAA0C;AAC1C,EADA;AAEA,EAFA;AAGA,EAHA;AAIA,CAJA,GAIK,CAJL;AAKA,CALA;AAMA,CANA;AAOA,CAPA;AAQA,EARA;AASA,CATA,GASKJ,iBATL;AAUA,CAVA;AAWA,CAXA,GAWIE,iBAAiB,GAAGC,eAXxB;AAYA,CAZA;AAaA,CAbA;AAcA,CAdA;AAeA,CAfA;AAgBA,CAhBA,GAgBIJ,eAhBJ;AAiBA,CAjBA,GAiBIE,cAjBJ;AAkBA,EAlBA;AAmBA,CAnBA;AAoBA,CApBA;AAqBA,CArBA;AAsBA,CAtBA;AAuBA,CAvBA;AAwBA,CAxBA;AAyBA,EAzBA;AA0BA,CA1BA,GA0BK,EA1BL,GA0BU,CA3BZ;;AA6BA,MAAMI,gBAAgB,GAAG,CAAIN,GAAAA,eAAJ,GAAsB,CAAtB,GAA0BE,cAAnD;;AAGO,SAASK,gBAAT,CAA0BC,IAA1B,EAAkD;AACvD,EAAA,IAAIA,IAAI,CAACC,cAAL,IAAuB,IAA3B,EAAiC;AAC/B;AACA;AACA,IAAA,OAAOJ,kBAAP,CAAA;AACD,GAJD,MAIO;AACL,IAAA,MAAMK,cAAc,GAAG,IAAIC,sBAAJ,CAAOH,IAAI,CAACE,cAAZ,CAA4BE,CAAAA,QAA5B,EAAvB,CADK;;IAGL,OAAOC,IAAI,CAACC,IAAL,CACLT,kBAAkB,GAClB,CADA,GAEAK,cAAc,GAAGJ,gBAFjB,GAGA,CAHA,GAIA,CAAKI,IAAAA,cAAc,GAAG,CAAjB,GAAqB,CAA1B,CALK,CAAP,CAAA;AAOD,GAAA;AACF;;AAGM,SAASK,mBAAT,CAA6BC,OAA7B,EAA8C;EACnD,OAAOA,OAAO,CACXC,KADI,CACEZ,kBADF,EACsBA,kBAAkB,GAAG,CAD3C,CAEJa,CAAAA,YAFI,EAAP,CAAA;AAGD,CAAA;AAEM,SAASC,cAAT,CAAwBH,OAAxB,EAAuD;AAC5D,EAAA,MAAMI,gBAAgB,GAAGf,kBAAkB,GAAG,CAA9C,CAAA;EACA,MAAMgB,KAAK,GAAG,EAAd,CAAA;AACA,EAAA,MAAMC,KAAK,GAAGP,mBAAmB,CAACC,OAAD,CAAjC,CAAA;;EACA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9B,IAAA,MAAM,CAACC,IAAD,CAASC,GAAAA,8BAAc,CAACC,WAAf,CACbV,OADa,EAEbI,gBAAgB,GAAGG,CAAC,GAAGjB,gBAFV,CAAf,CAAA;IAIAe,KAAK,CAACM,IAAN,CAAWH,IAAX,CAAA,CAAA;AACD,GAAA;;AACD,EAAA,OAAOH,KAAP,CAAA;AACD,CAAA;AAEM,SAASO,UAAT,CAAoBC,IAApB,EAAkC;AACvCC,EAAAA,iBAAM,CACJD,IAAI,CAACE,MAAL,IAAe/B,eADX,EAEH,CAAA,6BAAA,EAA+B6B,IAAK,CAAA,MAAA,EAAQ7B,eAAgB,CAAA,CAAA,CAFzD,CAAN,CAAA;AAID,CAAA;AASM,SAASgC,SAAT,CAAmBC,GAAnB,EAAgC;AACrCH,EAAAA,iBAAM,CACJG,GAAG,CAACF,MAAJ,IAAc7B,cADV,EAEH,CAAA,4BAAA,EAA8B+B,GAAI,CAAA,MAAA,EAAQ/B,cAAe,CAAA,CAAA,CAFtD,CAAN,CAAA;AAID,CAAA;AASM,SAASgC,2BAAT,CAAqC;EAC1CL,IAD0C;AAE1CI,EAAAA,GAAAA;AAF0C,CAArC,EAMJ;EACDL,UAAU,CAACC,IAAD,CAAV,CAAA;EACAG,SAAS,CAACC,GAAD,CAAT,CAAA;AACD;;;;;;;;;"}