"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorCodeBeet = exports.ErrorCode = void 0;
const beet = __importStar(require("@metaplex-foundation/beet"));
var ErrorCode;
(function (ErrorCode) {
    ErrorCode[ErrorCode["IncorrectOwner"] = 0] = "IncorrectOwner";
    ErrorCode[ErrorCode["Uninitialized"] = 1] = "Uninitialized";
    ErrorCode[ErrorCode["MintMismatch"] = 2] = "MintMismatch";
    ErrorCode[ErrorCode["IndexGreaterThanLength"] = 3] = "IndexGreaterThanLength";
    ErrorCode[ErrorCode["NumericalOverflowError"] = 4] = "NumericalOverflowError";
    ErrorCode[ErrorCode["TooManyCreators"] = 5] = "TooManyCreators";
    ErrorCode[ErrorCode["UuidMustBeExactly6Length"] = 6] = "UuidMustBeExactly6Length";
    ErrorCode[ErrorCode["NotEnoughTokens"] = 7] = "NotEnoughTokens";
    ErrorCode[ErrorCode["NotEnoughSOL"] = 8] = "NotEnoughSOL";
    ErrorCode[ErrorCode["TokenTransferFailed"] = 9] = "TokenTransferFailed";
    ErrorCode[ErrorCode["CandyMachineEmpty"] = 10] = "CandyMachineEmpty";
    ErrorCode[ErrorCode["CandyMachineNotLive"] = 11] = "CandyMachineNotLive";
    ErrorCode[ErrorCode["HiddenSettingsConfigsDoNotHaveConfigLines"] = 12] = "HiddenSettingsConfigsDoNotHaveConfigLines";
    ErrorCode[ErrorCode["CannotChangeNumberOfLines"] = 13] = "CannotChangeNumberOfLines";
    ErrorCode[ErrorCode["DerivedKeyInvalid"] = 14] = "DerivedKeyInvalid";
    ErrorCode[ErrorCode["PublicKeyMismatch"] = 15] = "PublicKeyMismatch";
    ErrorCode[ErrorCode["NoWhitelistToken"] = 16] = "NoWhitelistToken";
    ErrorCode[ErrorCode["TokenBurnFailed"] = 17] = "TokenBurnFailed";
    ErrorCode[ErrorCode["GatewayAppMissing"] = 18] = "GatewayAppMissing";
    ErrorCode[ErrorCode["GatewayTokenMissing"] = 19] = "GatewayTokenMissing";
    ErrorCode[ErrorCode["GatewayTokenExpireTimeInvalid"] = 20] = "GatewayTokenExpireTimeInvalid";
    ErrorCode[ErrorCode["NetworkExpireFeatureMissing"] = 21] = "NetworkExpireFeatureMissing";
    ErrorCode[ErrorCode["CannotFindUsableConfigLine"] = 22] = "CannotFindUsableConfigLine";
    ErrorCode[ErrorCode["InvalidString"] = 23] = "InvalidString";
    ErrorCode[ErrorCode["SuspiciousTransaction"] = 24] = "SuspiciousTransaction";
    ErrorCode[ErrorCode["CannotSwitchToHiddenSettings"] = 25] = "CannotSwitchToHiddenSettings";
    ErrorCode[ErrorCode["IncorrectSlotHashesPubkey"] = 26] = "IncorrectSlotHashesPubkey";
    ErrorCode[ErrorCode["IncorrectCollectionAuthority"] = 27] = "IncorrectCollectionAuthority";
    ErrorCode[ErrorCode["MismatchedCollectionPDA"] = 28] = "MismatchedCollectionPDA";
    ErrorCode[ErrorCode["MismatchedCollectionMint"] = 29] = "MismatchedCollectionMint";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
exports.errorCodeBeet = beet.fixedScalarEnum(ErrorCode);
//# sourceMappingURL=ErrorCode.js.map